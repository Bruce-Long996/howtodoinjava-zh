["```java\r\n    <properties>\r\n    \t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    \t<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n    \t<java.version>1.8</java.version>\r\n    \t<spring-cloud.version>Hoxton.RELEASE</spring-cloud.version>\r\n    </properties>\r\n\r\n    <dependencyManagement>\r\n    \t<dependencies>\r\n    \t\t<dependency>\r\n    \t\t\t<groupId>org.springframework.cloud</groupId>\r\n    \t\t\t<artifactId>spring-cloud-dependencies</artifactId>\r\n    \t\t\t<version>${spring-cloud.version}</version>\r\n    \t\t\t<type>pom</type>\r\n    \t\t\t<scope>import</scope>\r\n    \t\t</dependency>\r\n    \t</dependencies>\r\n    </dependencyManagement>\r\n\r\n    <dependencies>\r\n    \t<dependency>\r\n    \t\t<groupId>org.springframework.cloud</groupId>\r\n    \t\t<artifactId>spring-cloud-config-server</artifactId>\r\n    \t</dependency>\r\n    \t<dependency>\r\n    \t\t<groupId>org.springframework.boot</groupId>\r\n    \t\t<artifactId>spring-boot-starter-actuator</artifactId>\r\n    \t</dependency>\r\n    \t<dependency>\r\n    \t\t<groupId>org.springframework.boot</groupId>\r\n    \t\t<artifactId>spring-boot-starter-test</artifactId>\r\n    \t\t<scope>test</scope>\r\n    \t</dependency>\r\n    </dependencies>\r\n\r\n    ```","```java\r\n    package com.howtodoinjava.example.springconfigserver;\r\n\r\n    import org.springframework.boot.SpringApplication;\r\n    import org.springframework.boot.autoconfigure.SpringBootApplication;\r\n    import org.springframework.cloud.config.server.EnableConfigServer;\r\n\r\n    @EnableConfigServer\r\n    @SpringBootApplication\r\n    public class SpringConfigServerApplication \r\n    {\r\n    \tpublic static void main(String[] args) \r\n    \t{\r\n    \t\tSpringApplication.run(SpringConfigServerApplication.class, args);\r\n    \t}\r\n    }\r\n\r\n    ```","```java\r\n        msg = Hello world - this is from config server - default profile\r\n\r\n        ```","```java\r\n        msg = Hello world - this is from config server - Development Environment\r\n\r\n        ```","```java\r\n        msg = Hello world - this is from config server - Prodcution Environment\r\n\r\n        ```","```java\r\n        $ git init\r\n\r\n        $ git add .\r\n\r\n        $ git commit -m \"initial commit\"\r\n\r\n        ```","```java\r\n    #Server port\r\n    server.port = 8888\r\n\r\n    #Git repo location\r\n    spring.cloud.config.server.git.uri=E:\\\\devsetup\\\\gitworkspace\\\\spring-cloud\\\\config-git-repo\r\n\r\n    #Verify any repository issue in service startup\r\n    spring.cloud.config.server.git.cloneOnStart=true\r\n\r\n    #Disable security of the Management endpoint\r\n    management.security.enabled=false\r\n\r\n    ```","```java\r\n    java -jar target\\spring-config-server-0.0.1-SNAPSHOT.jar\r\n    ```","```java\r\n    <properties>\r\n    \t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    \t<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n    \t<java.version>1.8</java.version>\r\n    \t<spring-cloud.version>Hoxton.RELEASE</spring-cloud.version>\r\n    </properties>\r\n\r\n    <dependencyManagement>\r\n    \t<dependencies>\r\n    \t\t<dependency>\r\n    \t\t\t<groupId>org.springframework.cloud</groupId>\r\n    \t\t\t<artifactId>spring-cloud-dependencies</artifactId>\r\n    \t\t\t<version>${spring-cloud.version}</version>\r\n    \t\t\t<type>pom</type>\r\n    \t\t\t<scope>import</scope>\r\n    \t\t</dependency>\r\n    \t</dependencies>\r\n    </dependencyManagement>\r\n\r\n    <dependencies>\r\n    \t<dependency>\r\n    \t\t<groupId>org.springframework.boot</groupId>\r\n    \t\t<artifactId>spring-boot-starter-actuator</artifactId>\r\n    \t</dependency>\r\n    \t<dependency>\r\n    \t\t<groupId>org.springframework.cloud</groupId>\r\n    \t\t<artifactId>spring-cloud-starter-config</artifactId>\r\n    \t</dependency>\r\n    \t<dependency>\r\n    \t\t<groupId>org.springframework.boot</groupId>\r\n    \t\t<artifactId>spring-boot-starter-data-rest</artifactId>\r\n    \t</dependency>\r\n    \t<dependency>\r\n    \t\t<groupId>org.springframework.boot</groupId>\r\n    \t\t<artifactId>spring-boot-starter-web</artifactId>\r\n    \t</dependency>\r\n\r\n    \t<dependency>\r\n    \t\t<groupId>org.springframework.boot</groupId>\r\n    \t\t<artifactId>spring-boot-starter-test</artifactId>\r\n    \t\t<scope>test</scope>\r\n    \t</dependency>\r\n    </dependencies>\r\n\r\n    ```","```java\r\n    package com.howtodoinjava.example.springconfigclient;\r\n\r\n    import org.springframework.beans.factory.annotation.Autowired;\r\n    import org.springframework.beans.factory.annotation.Value;\r\n    import org.springframework.boot.SpringApplication;\r\n    import org.springframework.boot.autoconfigure.SpringBootApplication;\r\n    import org.springframework.cloud.context.config.annotation.RefreshScope;\r\n    import org.springframework.core.env.Environment;\r\n    import org.springframework.web.bind.annotation.GetMapping;\r\n    import org.springframework.web.bind.annotation.RestController;\r\n\r\n    @SpringBootApplication\r\n    public class SpringConfigClientApplication {\r\n\r\n    \tpublic static void main(String[] args) {\r\n    \t\tSpringApplication.run(SpringConfigClientApplication.class, args);\r\n    \t}\r\n\r\n    \t@Autowired\r\n    \tpublic void setEnv(Environment e)\r\n    \t{\r\n    \t\tSystem.out.println(e.getProperty(\"msg\"));\r\n    \t}\r\n    }\r\n\r\n    @RefreshScope\r\n    @RestController\r\n    class MessageRestController {\r\n\r\n    \t@Value(\"${msg:Config Server is not working. Please check...}\")\r\n    \tprivate String msg;\r\n\r\n    \t@GetMapping(\"/msg\")\r\n    \tpublic String getMsg() {\r\n    \t\treturn this.msg;\r\n    \t}\r\n    }\r\n\r\n    ```","```java\r\n    spring.application.name=client-config\r\n\r\n    #Active Profile - will relate to development properties file in the server. \r\n    #If this property is absent then,default profile will be activated which is \r\n    #the property file without any environment name at the end. \r\n    spring.profiles.active=development\r\n\r\n    # N.B. this is the default:\r\n    spring.cloud.config.uri=http://localhost:8888\r\n\r\n    management.security.enabled=false\r\n\r\n    ```"]