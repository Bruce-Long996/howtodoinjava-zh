["```java\r\n@Cacheable(value=\"books\", key=\"#isbn\")\r\npublic Book findStoryBook(ISBN isbn, boolean checkWarehouse, boolean includeUsed)\r\n\r\n@Cacheable(value=\"books\", key=\"#isbn.rawNumber\")\r\npublic Book findStoryBook (ISBN isbn, boolean checkWarehouse, boolean includeUsed)\r\n\r\n@Cacheable(value=\"books\", key=\"T(classType).hash(#isbn)\")\r\npublic Book findStoryBook (ISBN isbn, boolean checkWarehouse, boolean includeUsed)\r\n\r\n```","```java\r\n@Cacheable(value=\"book\", condition=\"#name.length < 50\")\r\npublic Book findStoryBook (String name)\r\n\r\n```","```java\r\nspring.cache.infinispan.config=infinispan.xml\r\n```","```java\r\npackage com.example.springcache.domain;\r\n\r\npublic class Student {\r\n\r\n\tString id;\r\n\tString name;\r\n\tString clz;\r\n\r\n\tpublic Student(String id, String name, String clz) {\r\n\t\tsuper();\r\n\t\tthis.id = id;\r\n\t\tthis.name = name;\r\n\t\tthis.clz = clz;\r\n\t}\r\n\r\n\t//Setters and getters\r\n}\r\n\r\n```","```java\r\npackage com.example.springcache.service;\r\n\r\nimport org.springframework.cache.annotation.Cacheable;\r\nimport org.springframework.stereotype.Service;\r\nimport com.example.springcache.domain.Student;\r\n\r\n@Service\r\npublic class StudentService \r\n{\r\n\t@Cacheable(\"student\")\r\n\tpublic Student getStudentByID(String id) \r\n\t{\r\n\t\ttry \r\n\t\t{\r\n\t\t\tSystem.out.println(\"Going to sleep for 5 Secs.. to simulate backend call.\");\r\n\t\t\tThread.sleep(1000*5);\r\n\t\t} \r\n\t\tcatch (InterruptedException e) \r\n\t\t{\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\r\n\t\treturn new Student(id,\"Sajal\" ,\"V\");\r\n\t}\r\n}\r\n\r\n```","```java\r\npackage com.example.springcache.controller;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.RestController;\r\nimport com.example.springcache.domain.Student;\r\nimport com.example.springcache.service.StudentService;\r\n\r\n@RestController\r\npublic class StudentController \r\n{\r\n\r\n\t@Autowired\r\n\tStudentService studentService;\r\n\r\n\t@GetMapping(\"/student/{id}\")\r\n\tpublic Student findStudentById(@PathVariable String id) \r\n\t{\r\n\t\tSystem.out.println(\"Searching by ID  : \" + id);\r\n\r\n\t\treturn studentService.getStudentByID(id);\r\n\t}\r\n}\r\n\r\n```","```java\r\npackage com.example.springcache;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.cache.annotation.EnableCaching;\r\n\r\n@SpringBootApplication\r\n@EnableCaching\r\npublic class SpringCacheApplication {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(SpringCacheApplication.class, args);\r\n\t}\r\n}\r\n\r\n```","```java\r\nhttp://localhost:8080/student/1\r\n```","```java\r\nSearching by ID  : 1\r\nGoing to sleep for 5 Secs.. to simulate backend call.\r\n\r\nSearching by ID  : 1\r\nSearching by ID  : 1\r\nSearching by ID  : 1\r\nSearching by ID  : 1\r\nSearching by ID  : 1\r\n\r\nSearching by ID  : 2\r\nGoing to sleep for 5 Secs.. to simulate backend call.\r\n\r\nSearching by ID  : 2\r\nSearching by ID  : 2\r\n\r\n```"]