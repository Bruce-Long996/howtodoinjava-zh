["```java\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\n\r\n@SpringBootApplication\r\npublic class Application \r\n{\r\n\tprivate static final Logger LOGGER=LoggerFactory.getLogger(Application.class);\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(Application.class, args);\r\n\r\n\t\tLOGGER.info(\"Simple log statement with inputs {}, {} and {}\", 1,2,3);\r\n\t}\r\n}\r\n\r\n```","```java\r\n2019-07-28 12:16:57.129  INFO 3416 --- [main] \r\ncom.howtodoinjava.demo.Application: Simple log statement with inputs 1, 2 and 3\r\n\r\n```","```java\r\n# In properties file\r\ndebug=true\r\n\r\n# In Console\r\n$ java -jar target/my-app-0.0.1-SNAPSHOT.jar --trace\r\n\r\n```","```java\r\n# In Console\r\n-Dlogging.level.org.springframework=ERROR \r\n-Dlogging.level.com.howtodoinjava=TRACE\r\n\r\n# In properties file\r\nlogging.level.org.springframework=ERROR \r\nlogging.level.com.howtodoinjava=TRACE\r\n\r\n```","```java\r\n<conversionRule conversionWord=\"clr\" \r\nconverterClass=\"org.springframework.boot.logging.logback.ColorConverter\" />\r\n\r\n<conversionRule conversionWord=\"wex\" \r\nconverterClass=\"org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter\" />\r\n\r\n<conversionRule conversionWord=\"wEx\" \r\nconverterClass=\"org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter\" />\r\n\r\n<property name=\"CONSOLE_LOG_PATTERN\" value=\"${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}})\r\n{faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39})\r\n{cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}\"/>\r\n\r\n<property name=\"FILE_LOG_PATTERN\" value=\"${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} \r\n${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}\"/>\r\n\r\n```","```java\r\n# Logging pattern for the console\r\nlogging.pattern.console= %d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n\r\n\r\n# Logging pattern for file\r\nlogging.pattern.file= %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%\r\n\r\n```","```java\r\n# Output to a temp_folder/file\r\nlogging.file=c:/temp/application.log\r\n\r\n#logging.path=/my-folder/\r\n\r\n# Logging pattern for file\r\nlogging.pattern.file= %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%\r\n\r\n```","```java\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<configuration>\r\n\r\n\t<property name=\"LOG_LOCATION\" value=\"c:/temp\" />\r\n\r\n\t<appender name=\"CONSOLE\" class=\"ch.qos.logback.core.ConsoleAppender\">\r\n\t\t<encoder>\r\n         \t<pattern>%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n</pattern>\r\n      \t</encoder>\r\n\t</appender>\r\n\r\n    <appender name=\"FILE\" class=\"ch.qos.logback.core.FileAppender\">\r\n      \t<File>{LOG_LOCATION}/mylog.log</File>\r\n      \t<encoder>\r\n\t         <pattern>%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n</pattern>\r\n\t    </encoder>\r\n\t    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\r\n            <fileNamePattern>${LOG_LOCATION}/archived/mylog-%d{yyyy-MM-dd}.%i.log\r\n            </fileNamePattern>\r\n            <timeBasedFileNamingAndTriggeringPolicy\r\n                class=\"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP\">\r\n                <maxFileSize>10MB</maxFileSize>\r\n            </timeBasedFileNamingAndTriggeringPolicy>\r\n        </rollingPolicy>\r\n   \t</appender> \r\n\r\n   \t<root level=\"INFO\">\r\n    \t<appender-ref ref=\"CONSOLE\"/>\r\n    \t<appender-ref ref=\"FILE\"/>\r\n   \t</root>\r\n\r\n   \t<!-- Application logs at trace level -->\r\n   \t<logger name=\"com.howtodoinjava\" level=\"trace\" additivity=\"false\">\r\n        <appender-ref ref=\"RollingFile\" />\r\n        <appender-ref ref=\"Console\" />\r\n    </logger>\r\n\r\n</configuration>\r\n\r\n```","```java\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n    <exclusions>\r\n        <exclusion>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-logging</artifactId>\r\n        </exclusion>\r\n    </exclusions>\r\n</dependency>\r\n\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-log4j2</artifactId>\r\n</dependency>\r\n\r\n```","```java\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Configuration status=\"WARN\" monitorInterval=\"30\">\r\n    <Properties>\r\n        <Property name=\"LOG_PATTERN\">%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %p %m%n</Property>\r\n        <Property name=\"APP_LOG_ROOT\">c:/temp</Property>\r\n    </Properties>\r\n    <Appenders>\r\n        <Console name=\"console\" target=\"SYSTEM_OUT\">\r\n            <PatternLayout pattern=\"${LOG_PATTERN}\" />\r\n        </Console>\r\n\r\n        <RollingFile name=\"file\"\r\n            fileName=\"${APP_LOG_ROOT}/SpringBoot2App/application.log\"\r\n            filePattern=\"${APP_LOG_ROOT}/SpringBoot2App/application-%d{yyyy-MM-dd}-%i.log\">\r\n            <PatternLayout pattern=\"${LOG_PATTERN}\" />\r\n            <Policies>\r\n                <SizeBasedTriggeringPolicy size=\"19500KB\" />\r\n            </Policies>\r\n            <DefaultRolloverStrategy max=\"1\" />\r\n        </RollingFile>\r\n\r\n    </Appenders>\r\n    <Loggers>\r\n        <Root level=\"info\">\r\n            <AppenderRef ref=\"console\" />\r\n            <AppenderRef ref=\"file\" />\r\n        </Root>\r\n    </Loggers>\r\n</Configuration>\r\n\r\n```","```java\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\n@SpringBootApplication\r\npublic class Application \r\n{\r\n\tprivate static final Logger LOGGER = LoggerFactory.getLogger(Application.class);\r\n\r\n\tpublic static void main(String[] args) {\t\t\r\n\t\tSpringApplication.run(Application.class, args);\r\n\r\n\t\tLOGGER.info(\"Simple log statement with inputs {}, {} and {}\", 1,2,3);\r\n\t}\r\n}\r\n\r\n```","```java\r\nimport org.apache.logging.log4j.LogManager;\r\nimport org.apache.logging.log4j.Logger;\r\n\r\n@SpringBootApplication\r\npublic class Application \r\n{\r\n\tprivate static Logger LOGGER = LogManager.getLogger(Application.class);\r\n\r\n\tpublic static void main(String[] args) {\t\t\r\n\t\tSpringApplication.run(Application.class, args);\r\n\r\n\t\tLOGGER.info(\"Simple log statement with inputs 1, 2 and 3\");\r\n\t}\r\n}\r\n\r\n```"]