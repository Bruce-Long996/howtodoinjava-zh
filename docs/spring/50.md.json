["```java\r\nimport java.util.List;\r\nimport java.util.Optional;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Controller;\r\nimport org.springframework.ui.Model;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RequestMethod;\r\n\r\nimport com.howtodoinjava.demo.entity.EmployeeEntity;\r\nimport com.howtodoinjava.demo.exception.RecordNotFoundException;\r\nimport com.howtodoinjava.demo.service.EmployeeService;\r\n\r\n@Controller\r\n@RequestMapping(\"/\")\r\npublic class EmployeeMvcController \r\n{\r\n\t@Autowired\r\n\tEmployeeService service;\r\n\r\n\t@RequestMapping\r\n\tpublic String getAllEmployees(Model model) \r\n\t{\r\n\t\tList<EmployeeEntity> list = service.getAllEmployees();\r\n\r\n\t\tmodel.addAttribute(\"employees\", list);\r\n\t\treturn \"list-employees\";\r\n\t}\r\n\r\n\t@RequestMapping(path = {\"/edit\", \"/edit/{id}\"})\r\n\tpublic String editEmployeeById(Model model, @PathVariable(\"id\") Optional<Long> id) \r\n\t\t\t\t\t\t\tthrows RecordNotFoundException \r\n\t{\r\n\t\tif (id.isPresent()) {\r\n\t\t\tEmployeeEntity entity = service.getEmployeeById(id.get());\r\n\t\t\tmodel.addAttribute(\"employee\", entity);\r\n\t\t} else {\r\n\t\t\tmodel.addAttribute(\"employee\", new EmployeeEntity());\r\n\t\t}\r\n\t\treturn \"add-edit-employee\";\r\n\t}\r\n\r\n\t@RequestMapping(path = \"/delete/{id}\")\r\n\tpublic String deleteEmployeeById(Model model, @PathVariable(\"id\") Long id) \r\n\t\t\t\t\t\t\tthrows RecordNotFoundException \r\n\t{\r\n\t\tservice.deleteEmployeeById(id);\r\n\t\treturn \"redirect:/\";\r\n\t}\r\n\r\n\t@RequestMapping(path = \"/createEmployee\", method = RequestMethod.POST)\r\n\tpublic String createOrUpdateEmployee(EmployeeEntity employee) \r\n\t{\r\n\t\tservice.createOrUpdateEmployee(employee);\r\n\t\treturn \"redirect:/\";\r\n\t}\r\n}\r\n\r\n```","```java\r\n<!DOCTYPE html>\r\n<html xmlns:th=\"http://www.thymeleaf.org\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <title>All Employees</title>\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\">\r\n    <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.4.1/css/all.css\">\r\n</head>\r\n\r\n<body>\r\n    <div class=\"container my-2\">\r\n    <div class=\"card\">\r\n    <div class=\"card-body\">\r\n        <div th:switch=\"${employees}\" class=\"container my-5\">\r\n            <p class=\"my-5\">\r\n                <a href=\"/edit\" class=\"btn btn-primary\">\r\n                <i class=\"fas fa-user-plus ml-2\"> Add Employee </i></a>\r\n            </p>\r\n            <div class=\"col-md-10\">\r\n                <h2 th:case=\"null\">No record found !!</h2>\r\n                <div th:case=\"*\">\r\n                    <table class=\"table table-striped table-responsive-md\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>First Name</th>\r\n                                <th>Last Name</th>\r\n                                <th>Email</th>\r\n                                <th>Edit</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr th:each=\"employee : ${employees}\">\r\n                                <td th:text=\"${employee.firstName}\"></td>\r\n                                <td th:text=\"${employee.lastName}\"></td>\r\n                                <td th:text=\"${employee.email}\"></td>\r\n                                <td>\r\n                                    <a th:href=\"@{/edit/{id}(id=${employee.id})}\" \r\n                                             class=\"btn btn-primary\">\r\n                                        <i class=\"fas fa-user-edit ml-2\"></i>\r\n                                    </a>\r\n                                </td>\r\n                                <td>\r\n                                    <a th:href=\"@{/delete/{id}(id=${employee.id})}\" \r\n                                              class=\"btn btn-primary\">\r\n                                        <i class=\"fas fa-user-times ml-2\"></i>\r\n                                    </a>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    </div>\r\n</body>\r\n\r\n</html>\r\n\r\n```","```java\r\n<!DOCTYPE html>\r\n<html xmlns:th=\"http://www.thymeleaf.org\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <title>Add Employee</title>\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\">\r\n    <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.4.1/css/all.css\">\r\n</head>\r\n\r\n<body>\r\n    <div class=\"container my-5\">\r\n        <h3> Add Employee</h3>\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"col-md-10\">\r\n                    <form action=\"#\" th:action=\"@{/createEmployee}\" th:object=\"${employee}\" \r\n                                                                       method=\"post\">\r\n                        <div class=\"row\">\r\n                            <div class=\"form-group col-md-8\">\r\n                                <label for=\"name\" class=\"col-form-label\">First Name</label> \r\n                                <input type=\"text\" th:field=\"*{firstName}\" class=\"form-control\" \r\n                                            id=\"firstName\" placeholder=\"First Name\" />\r\n                            </div>\r\n                            <div class=\"form-group col-md-8\">\r\n                                <label for=\"name\" class=\"col-form-label\">Last Name</label> \r\n                                <input type=\"text\" th:field=\"*{lastName}\" class=\"form-control\" \r\n                                            id=\"lastName\" placeholder=\"Last Name\" />\r\n                            </div>\r\n                            <div class=\"form-group col-md-8\">\r\n                                <label for=\"email\" class=\"col-form-label\">Email</label> \r\n                                <input type=\"text\" th:field=\"*{email}\" class=\"form-control\" \r\n                                            id=\"email\" placeholder=\"Email Id\" />\r\n                            </div>\r\n\r\n                            <div class=\"col-md-6\">\r\n                                <input type=\"submit\" class=\"btn btn-primary\" value=\" Submit \">\r\n                            </div>\r\n\r\n                            <input type=\"hidden\" id=\"id\" th:field=\"*{id}\">\r\n\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</body>\r\n\r\n</html>\r\n\r\n```","```java\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.GeneratedValue;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.Table;\r\n\r\n@Entity\r\n@Table(name=\"TBL_EMPLOYEES\")\r\npublic class EmployeeEntity {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    private Long id;\r\n\r\n    @Column(name=\"first_name\")\r\n    private String firstName;\r\n\r\n    @Column(name=\"last_name\")\r\n    private String lastName;\r\n\r\n    @Column(name=\"email\", nullable=false, length=200)\r\n    private String email;\r\n\r\n    //Setters and getters\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"EmployeeEntity [id=\" + id + \", firstName=\" + firstName + \r\n                \", lastName=\" + lastName + \", email=\" + email   + \"]\";\r\n    }\r\n}\r\n\r\n```","```java\r\nimport org.springframework.data.repository.CrudRepository;\r\nimport org.springframework.stereotype.Repository;\r\n\r\nimport com.howtodoinjava.demo.entity.EmployeeEntity;\r\n\r\n@Repository\r\npublic interface EmployeeRepository \r\n\t\t\textends CrudRepository<EmployeeEntity, Long> {\r\n\r\n}\r\n\r\n```","```java\r\nDROP TABLE IF EXISTS TBL_EMPLOYEES;\r\n\r\nCREATE TABLE TBL_EMPLOYEES (\r\n  id INT AUTO_INCREMENT  PRIMARY KEY,\r\n  first_name VARCHAR(250) NOT NULL,\r\n  last_name VARCHAR(250) NOT NULL,\r\n  email VARCHAR(250) DEFAULT NULL\r\n);\r\n\r\n```","```java\r\nINSERT INTO \r\n\tTBL_EMPLOYEES (first_name, last_name, email) \r\nVALUES\r\n  \t('Lokesh', 'Gupta', 'howtodoinjava@gmail.com'),\r\n  \t('John', 'Doe', 'xyz@email.com');\r\n\r\n```","```java\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Optional;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport com.howtodoinjava.demo.entity.EmployeeEntity;\r\nimport com.howtodoinjava.demo.exception.RecordNotFoundException;\r\nimport com.howtodoinjava.demo.repository.EmployeeRepository;\r\n\r\n@Service\r\npublic class EmployeeService {\r\n\r\n\t@Autowired\r\n\tEmployeeRepository repository;\r\n\r\n\tpublic List<EmployeeEntity> getAllEmployees()\r\n\t{\r\n\t\tList<EmployeeEntity> result = (List<EmployeeEntity>) repository.findAll();\r\n\r\n\t\tif(result.size() > 0) {\r\n\t\t\treturn result;\r\n\t\t} else {\r\n\t\t\treturn new ArrayList<EmployeeEntity>();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic EmployeeEntity getEmployeeById(Long id) throws RecordNotFoundException \r\n\t{\r\n\t\tOptional<EmployeeEntity> employee = repository.findById(id);\r\n\r\n\t\tif(employee.isPresent()) {\r\n\t\t\treturn employee.get();\r\n\t\t} else {\r\n\t\t\tthrow new RecordNotFoundException(\"No employee record exist for given id\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic EmployeeEntity createOrUpdateEmployee(EmployeeEntity entity) \r\n\t{\r\n\t\tif(entity.getId()  == null) \r\n\t\t{\r\n\t\t\tentity = repository.save(entity);\r\n\r\n\t\t\treturn entity;\r\n\t\t} \r\n\t\telse \r\n\t\t{\r\n\t\t\tOptional<EmployeeEntity> employee = repository.findById(entity.getId());\r\n\r\n\t\t\tif(employee.isPresent()) \r\n\t\t\t{\r\n\t\t\t\tEmployeeEntity newEntity = employee.get();\r\n\t\t\t\tnewEntity.setEmail(entity.getEmail());\r\n\t\t\t\tnewEntity.setFirstName(entity.getFirstName());\r\n\t\t\t\tnewEntity.setLastName(entity.getLastName());\r\n\r\n\t\t\t\tnewEntity = repository.save(newEntity);\r\n\r\n\t\t\t\treturn newEntity;\r\n\t\t\t} else {\r\n\t\t\t\tentity = repository.save(entity);\r\n\r\n\t\t\t\treturn entity;\r\n\t\t\t}\r\n\t\t}\r\n\t} \r\n\r\n\tpublic void deleteEmployeeById(Long id) throws RecordNotFoundException \r\n\t{\r\n\t\tOptional<EmployeeEntity> employee = repository.findById(id);\r\n\r\n\t\tif(employee.isPresent()) \r\n\t\t{\r\n\t\t\trepository.deleteById(id);\r\n\t\t} else {\r\n\t\t\tthrow new RecordNotFoundException(\"No employee record exist for given id\");\r\n\t\t}\r\n\t} \r\n}\r\n\r\n```","```java\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t\t<version>2.1.5.RELEASE</version>\r\n\t\t<relativePath /> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>com.howtodoinjava</groupId>\r\n\t<artifactId>demo</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>demo</name>\r\n\t<description>Demo project for Spring Boot</description>\r\n\r\n\t<properties>\r\n\t\t<java.version>1.8</java.version>\r\n\t</properties>\r\n\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-thymeleaf</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.h2database</groupId>\r\n\t\t\t<artifactId>h2</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n</project>\r\n\r\n```"]