["```java\r\n<web-app>\r\n\r\n  <listener>\r\n    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\r\n  </listener>\r\n\r\n  <context-param>\r\n    <param-name>contextConfigLocation</param-name>\r\n    <param-value>/WEB-INF/dispatcher-servlet-context.xml</param-value>\r\n  </context-param>\r\n\r\n  <servlet>\r\n    <servlet-name>dispatcher-servlet</servlet-name>\r\n    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\r\n    <init-param>\r\n      <param-name>contextConfigLocation</param-name>\r\n      <param-value></param-value>\r\n    </init-param>\r\n    <load-on-startup>1</load-on-startup>\r\n  </servlet>\r\n\r\n  <servlet-mapping>\r\n    <servlet-name>dispatcher-servlet</servlet-name>\r\n    <url-pattern>/*</url-pattern>\r\n  </servlet-mapping>\r\n\r\n</web-app>\r\n\r\n```","```java\r\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\r\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://www.springframework.org/schema/beans\r\n\thttp://www.springframework.org/schema/beans/spring-beans-2.5.xsd\">\r\n\r\n    <bean id=\"viewResolver\"\r\n    \tclass=\"org.springframework.web.servlet.view.InternalResourceViewResolver\" >\r\n        <property name=\"prefix\">\r\n            <value>/WEB-INF/views/</value>\r\n        </property>\r\n        <property name=\"suffix\">\r\n            <value>.jsp</value>\r\n        </property>\r\n    </bean>\r\n\r\n</beans>\r\n\r\n```","```java\r\npublic class ApplicationInitializer implements WebApplicationInitializer \r\n{\r\n\t@Override\r\n\tpublic void onStartup(ServletContext servletContext) throws ServletException \r\n\t{\r\n\t\tXmlWebApplicationContext appContext = new XmlWebApplicationContext();\r\n\t\tappContext.setConfigLocation(\"/WEB-INF/dispatcher-servlet-context.xml\");\r\n\r\n\t\tServletRegistration.Dynamic registration = servletContext\r\n\t\t\t\t\t.addServlet(\"rootDispatcher\", new DispatcherServlet(appContext));\r\n\t\tregistration.setLoadOnStartup(1);\r\n\t\tregistration.addMapping(\"/\");\r\n\t}\r\n}\r\n\r\n```","```java\r\npublic class ApplicationInitializer implements WebApplicationInitializer \r\n{\r\n\t@Override\r\n\tpublic void onStartup(ServletContext container) \r\n\t{\r\n\t\t// Create the 'root' Spring application context\r\n\t\tAnnotationConfigWebApplicationContext rootContext = new AnnotationConfigWebApplicationContext();\r\n\t\trootContext.register(AppConfig.class);\r\n\r\n\t\t// Manage the lifecycle of the root application context\r\n\t\tcontainer.addListener(new ContextLoaderListener(rootContext));\r\n\r\n\t\t// Create the dispatcher servlet's Spring application context\r\n\t\tAnnotationConfigWebApplicationContext dispatcherContext = new AnnotationConfigWebApplicationContext();\r\n\t\tdispatcherContext.register(DispatcherConfig.class);\r\n\r\n\t\tServletRegistration.Dynamic dispatcher = container.addServlet(\"dispatcher\", \r\n\t\t\t\t\t\tnew DispatcherServlet(dispatcherContext));\r\n\t\tdispatcher.setLoadOnStartup(1);\r\n\t\tdispatcher.addMapping(\"/\");\r\n\t}\r\n}\r\n\r\n```","```java\r\npublic class ApplicationInitializer extends AbstractDispatcherServletInitializer {\r\n\r\n\t@Override\r\n\tprotected WebApplicationContext createRootApplicationContext() {\r\n\t        return null;\r\n\t}\r\n\r\n\t@Override\r\n\tprotected WebApplicationContext createServletApplicationContext() {\r\n\t        XmlWebApplicationContext cxt = new XmlWebApplicationContext();\r\n\t        cxt.setConfigLocation(\"/WEB-INF/dispatcher-servlet-context.xml\");\r\n\t        return cxt;\r\n\t}\r\n\r\n\t@Override\r\n\tprotected String[] getServletMappings() {\r\n\t        return new String[] { \"/\" };\r\n\t}\r\n\r\n\t//Register filters\r\n\t@Override\r\n    protected Filter[] getServletFilters() {\r\n        return new Filter[] { new HiddenHttpMethodFilter(), new CharacterEncodingFilter() };\r\n    }\r\n}\r\n\r\n```","```java\r\npublic class AppInitializer extends AbstractAnnotationConfigDispatcherServletInitializer {\r\n\r\n   @Override\r\n   protected Class<?>[] getRootConfigClasses() {\r\n      return new Class[] { RootConfig.class };\r\n   }\r\n\r\n   @Override\r\n   protected Class<?>[] getServletConfigClasses() {\r\n      return new Class[] { WebMvcConfig.class };\r\n   }\r\n\r\n   @Override\r\n   protected String[] getServletMappings() {\r\n      return new String[] { \"/\" };\r\n   }\r\n}\r\n\r\n```","```java\r\npackage com.howtodoinjava.demo.spring.config;\r\n\r\npublic class AppInitializer extends \r\n\tAbstractAnnotationConfigDispatcherServletInitializer {\r\n\r\n   @Override\r\n   protected Class<?>[] getRootConfigClasses() {\r\n      return new Class[] { };\r\n   }\r\n\r\n   @Override\r\n   protected Class<?>[] getServletConfigClasses() {\r\n      return new Class[] { WebMvcConfig.class };\r\n   }\r\n\r\n   @Override\r\n   protected String[] getServletMappings() {\r\n      return new String[] { \"/\" };\r\n   }\r\n}\r\n\r\n```","```java\r\n@Configuration\r\n@EnableWebMvc\r\n@ComponentScan(basePackages = { \"com.howtodoinjava.demo.spring\"})\r\npublic class WebMvcConfig implements WebMvcConfigurer {\r\n\r\n   @Bean\r\n   public InternalResourceViewResolver resolver() {\r\n      InternalResourceViewResolver resolver = new InternalResourceViewResolver();\r\n      resolver.setViewClass(JstlView.class);\r\n      resolver.setPrefix(\"/WEB-INF/views/\");\r\n      resolver.setSuffix(\".jsp\");\r\n      return resolver;\r\n   }\r\n}\r\n\r\n```","```java\r\n@Controller\r\npublic class HomeController \r\n{\r\n\t@GetMapping(\"/\")\r\n\tpublic String homeInit(Locale locale, Model model) {\r\n\t\treturn \"home\";\r\n\t}\r\n}\r\n\r\n```","```java\r\n<html>\r\n<head>\r\n\t<title>Spring 5 Web MVC Example</title>\r\n</head>\r\n<body>\r\n\t<h1>HowToDoInJava.com</h1>\r\n\t<h2>Spring 5 Web MVC DispatcherServlet Example</h2>\r\n</body>\r\n</html>\r\n\r\n```","```java\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd;\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<groupId>com.howtodoinjava.spring5.mvc</groupId>\r\n\t<artifactId>spring5-webmvc-demo</artifactId>\r\n\t<packaging>war</packaging>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>spring5-webmvc-demo Maven Webapp</name>\r\n\t<url>http://maven.apache.org</url>\r\n\t<properties>\r\n\t\t<failOnMissingWebXml>false</failOnMissingWebXml>\r\n\t\t<spring.version>5.2.0.RELEASE</spring.version>\r\n\t\t<jstl.version>1.2.1</jstl.version>\r\n\t\t<tld.version>1.1.2</tld.version>\r\n\t\t<servlets.version>3.1.0</servlets.version>\r\n\t\t<jsp.version>2.3.1</jsp.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<!-- Spring MVC Dependency -->\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework</groupId>\r\n\t\t\t<artifactId>spring-webmvc</artifactId>\r\n\t\t\t<version>${spring.version}</version>\r\n\t\t</dependency>\r\n\r\n\t\t<!-- JSTL Dependency -->\r\n\t\t<dependency>\r\n\t\t\t<groupId>javax.servlet.jsp.jstl</groupId>\r\n\t\t\t<artifactId>javax.servlet.jsp.jstl-api</artifactId>\r\n\t\t\t<version>${jstl.version}</version>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>taglibs</groupId>\r\n\t\t\t<artifactId>standard</artifactId>\r\n\t\t\t<version>${tld.version}</version>\r\n\t\t</dependency>\r\n\r\n\t\t<!-- Servlet Dependency -->\r\n\t\t<dependency>\r\n\t\t\t<groupId>javax.servlet</groupId>\r\n\t\t\t<artifactId>javax.servlet-api</artifactId>\r\n\t\t\t<version>${servlets.version}</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\r\n\t\t<!-- JSP Dependency -->\r\n\t\t<dependency>\r\n\t\t\t<groupId>javax.servlet.jsp</groupId>\r\n\t\t\t<artifactId>javax.servlet.jsp-api</artifactId>\r\n\t\t\t<version>${jsp.version}</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\t<build>\r\n\t\t<sourceDirectory>src/main/java</sourceDirectory>\r\n\t\t<resources>\r\n\t\t\t<resource>\r\n\t\t\t\t<directory>src/main/resources</directory>\r\n\t\t\t</resource>\r\n\t\t</resources>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\r\n\t\t\t\t<version>3.5.1</version>\r\n\t\t\t\t<configuration>\r\n\t\t\t\t\t<source>1.8</source>\r\n\t\t\t\t\t<target>1.8</target>\r\n\t\t\t\t</configuration>\r\n\t\t\t</plugin>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.apache.tomcat.maven</groupId>\r\n\t\t\t\t<artifactId>tomcat7-maven-plugin</artifactId>\r\n\t\t\t\t<version>2.2</version>\r\n\t\t\t\t<configuration>\r\n\t\t\t\t\t<path>/</path>\r\n\t\t\t\t</configuration>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n</project>\r\n\r\n```"]