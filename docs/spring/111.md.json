["```java\r\n<dependency>\r\n    <groupId>org.springframework</groupId>\r\n    <artifactId>spring-context</artifactId>\r\n    <version>4.1.4.RELEASE</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework</groupId>\r\n    <artifactId>spring-context-support</artifactId>\r\n    <version>4.1.4.RELEASE</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework</groupId>\r\n    <artifactId>spring-aop</artifactId>\r\n    <version>4.1.4.RELEASE</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.aspectj</groupId>\r\n    <artifactId>aspectjrt</artifactId>\r\n    <version>1.6.11</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.aspectj</groupId>\r\n    <artifactId>aspectjweaver</artifactId>\r\n    <version>1.6.11</version>\r\n</dependency>\r\n\r\n```","```java\r\n@Aspect\r\npublic class EmployeeCRUDAspect {\r\n\r\n    @Before(\"execution(* EmployeeManager.getEmployeeById(..))\")\t\t\t//point-cut expression\r\n    public void logBeforeV1(JoinPoint joinPoint)\r\n    {\r\n        System.out.println(\"EmployeeCRUDAspect.logBeforeV1() : \" + joinPoint.getSignature().getName());\r\n    }\r\n}\r\n\r\n```","```java\r\n@Component\r\npublic class EmployeeManager\r\n{\r\n    public EmployeeDTO getEmployeeById(Integer employeeId) {\r\n        System.out.println(\"Method getEmployeeById() called\");\r\n        return new EmployeeDTO();\r\n    }\r\n}\r\n\r\n```","```java\r\nublic class TestAOP\r\n{\r\n    @SuppressWarnings(\"resource\")\r\n    public static void main(String[] args) {\r\n\r\n        ApplicationContext context = new ClassPathXmlApplicationContext\r\n        \t\t\t\t\t(\"com/howtodoinjava/demo/aop/applicationContext.xml\");\r\n\r\n        EmployeeManager manager = context.getBean(EmployeeManager.class);\r\n\r\n        manager.getEmployeeById(1);\r\n    }\r\n}\r\n\r\n```","```java\r\nEmployeeCRUDAspect.logBeforeV1() : getEmployeeById\r\nMethod getEmployeeById() called\r\n\r\n```"]