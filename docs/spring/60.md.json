["```java\r\npackage com.example.springrmiserver.service;\r\n\r\npublic interface HelloWorldRMI \r\n{\r\n\tpublic String sayHelloRmi(String msg);\r\n}\r\n\r\n```","```java\r\npackage com.example.springrmiserver.service;\r\n\r\nimport java.util.Date;\r\n\r\npublic class HelloWorldRMIimpl implements HelloWorldRMI {\r\n\r\n\t@Override\r\n\tpublic String sayHelloRmi(String msg) {\r\n\t\tSystem.out.println(\"================Server Side ========================\");\r\n\t\tSystem.out.println(\"Inside Rmi IMPL - Incoming msg : \" + msg);\r\n\t\treturn \"Hello \" + msg + \" :: Response time - > \" + new Date();\r\n\t}\r\n}\r\n\r\n```","```java\r\npackage com.example.springrmiserver;\r\n\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.remoting.rmi.RmiServiceExporter;\r\nimport org.springframework.remoting.support.RemoteExporter;\r\n\r\nimport com.example.springrmiserver.service.HelloWorldRMI;\r\nimport com.example.springrmiserver.service.HelloWorldRMIimpl;\r\n\r\n@Configuration\r\npublic class Config {\r\n\r\n\t@Bean\r\n\tRemoteExporter registerRMIExporter() {\r\n\r\n\t\tRmiServiceExporter exporter = new RmiServiceExporter();\r\n\t\texporter.setServiceName(\"helloworldrmi\");\r\n\t\texporter.setServiceInterface(HelloWorldRMI.class);\r\n\t\texporter.setService(new HelloWorldRMIimpl());\r\n\r\n\t\treturn exporter;\r\n\t}\r\n}\r\n\r\n```","```java\r\n2018-09-07 21:37:22.872  INFO 6452 --- [main] o.s.remoting.rmi.RmiServiceExporter      \r\n: Binding service 'helloworldrmi' to RMI registry: \r\nRegistryImpl[UnicastServerRef [liveRef: [endpoint:[192.168.1.7:1099](local),objID:[0:0:0, 0]]]]\r\n\r\n```","```java\r\npackage com.example.springrmiclient;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.remoting.rmi.RmiProxyFactoryBean;\r\n\r\nimport com.example.springrmiserver.service.HelloWorldRMI;\r\n\r\n@SpringBootApplication\r\npublic class SpringRmiClientApplication {\r\n\r\n\t@Bean\r\n\tRmiProxyFactoryBean rmiProxy() {\r\n\t\tRmiProxyFactoryBean bean = new RmiProxyFactoryBean();\r\n\t\tbean.setServiceInterface(HelloWorldRMI.class);\r\n\t\tbean.setServiceUrl(\"rmi://localhost:1099/helloworldrmi\");\r\n\r\n\t\treturn bean;\r\n\t}\r\n\r\n\tpublic static void main(String[] args) \r\n\t{\r\n\t\tHelloWorldRMI helloWorldRMI = SpringApplication.run(SpringRmiClientApplication.class, args)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.getBean(HelloWorldRMI.class);\r\n\r\n\t\tSystem.out.println(\"================Client Side ========================\");\r\n\r\n\t\tSystem.out.println(helloWorldRMI.sayHelloRmi(\"Sajal\"));\r\n\t}\r\n}\r\n\r\n```","```java\r\n================Server Side ========================\r\nInside Rmi IMPL - Incoming msg : Sajal\r\n2018-09-07 21:39:14.776  INFO Registering beans for JMX exposure on startup\r\n2018-09-07 21:39:14.808  INFO Started SpringRmiClientApplication in 1.866 seconds (JVM running for 2.368)\r\n================Client Side ========================\r\nHello Sajal :: Response time - > Fri Sep 07 21:39:14 IST 2018\r\n\r\n```","```java\r\n\r\n<dependency>\r\n\t<groupId>com.caucho</groupId>\r\n\t<artifactId>hessian</artifactId>\r\n\t<version>4.0.51</version>\r\n</dependency> \r\n\r\n```","```java\r\npackage com.howtodoinjava.hessianserver.hessian;\r\n\r\npublic interface HelloWorld {\r\n\tpublic String sayHelloWithHessian(String msg);\r\n}\r\n\r\n```","```java\r\npackage com.howtodoinjava.hessianserver.hessian;\r\n\r\nimport java.util.Date;\r\n\r\npublic class HelloWorldImpl implements HelloWorld {\r\n\r\n\t@Override\r\n\tpublic String sayHelloWithHessian(String msg) {\r\n\t\tSystem.out.println(\"=============server side==============\");\r\n\t\tSystem.out.println(\"msg : \" + msg);\r\n\t\treturn \"Hello \" + msg + \" Response time :: \" + new Date();\r\n\t}\r\n}\r\n\r\n```","```java\r\npackage com.howtodoinjava.hessianserver;\r\n\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.remoting.caucho.HessianServiceExporter;\r\nimport org.springframework.remoting.support.RemoteExporter;\r\n\r\nimport com.howtodoinjava.hessianserver.hessian.HelloWorld;\r\nimport com.howtodoinjava.hessianserver.hessian.HelloWorldImpl;\r\n\r\n@Configuration\r\npublic class HessianConfiguration {\r\n\r\n\t@Bean(name = \"/hellohessian\")\r\n\tRemoteExporter sayHelloServiceHessian() {\r\n\t\tHessianServiceExporter exporter = new HessianServiceExporter();\r\n\t\texporter.setService(new HelloWorldImpl());\r\n\t\texporter.setServiceInterface(HelloWorld.class);\r\n\t\treturn exporter;\r\n\t}\r\n\r\n}\r\n\r\n```","```java\r\npackage com.howtodoinjava.example.hessianclient;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.context.ConfigurableApplicationContext;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.remoting.caucho.HessianProxyFactoryBean;\r\n\r\nimport com.howtodoinjava.hessianserver.hessian.HelloWorld;\r\n\r\n@SpringBootApplication\r\npublic class HessianClientApplication {\r\n\r\n\t@Bean\r\n\tpublic HessianProxyFactoryBean hessianInvoker() {\r\n\t\tHessianProxyFactoryBean invoker = new HessianProxyFactoryBean();\r\n\t\tinvoker.setServiceUrl(\"http://localhost:8080/hellohessian\");\r\n\t\tinvoker.setServiceInterface(HelloWorld.class);\r\n\t\treturn invoker;\r\n\t}\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tConfigurableApplicationContext context =  SpringApplication.run(HessianClientApplication.class, args);\r\n\t\tSystem.out.println(\"========Client Side===============\");\r\n\t\tHelloWorld helloWorld =   \tcontext.getBean(HelloWorld.class);\r\n\t\tSystem.out.println(helloWorld.sayHelloWithHessian(\"Sajal\"));\r\n\t}\r\n}\r\n\r\n```","```java\r\n2018-09-07 21:46:09.367  INFO 1264 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started\r\n2018-09-07 21:46:09.403  INFO 1264 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 36 ms\r\n=============server side==============\r\nmsg : Sajal\r\n\r\n```","```java\r\n2018-09-07 21:46:08.903  INFO 6856 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup\r\n2018-09-07 21:46:09.197  INFO 6856 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9090 (http) with context path ''\r\n2018-09-07 21:46:09.205  INFO 6856 --- [           main] c.h.e.h.HessianClientApplication         : Started HessianClientApplication in 6.069 seconds (JVM running for 7.092)\r\n========Client Side===============\r\nHello Sajal Response time :: Fri Sep 07 21:46:09 IST 2018\r\n\r\n```"]