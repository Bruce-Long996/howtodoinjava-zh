["```java\r\n<properties>\r\n\t<spring.version>5.2.0.RELEASE</spring.version>\r\n\t<email.version>1.16.18</email.version>\r\n</properties>\r\n\r\n<!-- Spring Context Support -->\r\n<dependency>\r\n\t<groupId>org.springframework</groupId>\r\n\t<artifactId>spring-context-support</artifactId>\r\n\t<version>${spring.version}</version>\r\n</dependency>\r\n\r\n<dependency>\r\n\t<groupId>com.sun.mail</groupId>\r\n\t<artifactId>javax.mail</artifactId>\r\n\t<version>${email.version}</version>\r\n</dependency>\r\n\r\n```","```java\r\nimport java.util.Properties;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.mail.SimpleMailMessage;\r\nimport org.springframework.mail.javamail.JavaMailSender;\r\nimport org.springframework.mail.javamail.JavaMailSenderImpl;\r\n\r\n@Configuration\r\npublic class EmailConfig \r\n{\r\n\t@Bean\r\n\tpublic JavaMailSender getJavaMailSender() \r\n\t{\r\n\t    JavaMailSenderImpl mailSender = new JavaMailSenderImpl();\r\n\t    mailSender.setHost(\"smtp.gmail.com\");\r\n\t    mailSender.setPort(25);\r\n\r\n\t    mailSender.setUsername(\"admin@gmail.com\");\r\n\t    mailSender.setPassword(\"password\");\r\n\r\n\t    Properties props = mailSender.getJavaMailProperties();\r\n\t    props.put(\"mail.transport.protocol\", \"smtp\");\r\n\t    props.put(\"mail.smtp.auth\", \"true\");\r\n\t    props.put(\"mail.smtp.starttls.enable\", \"true\");\r\n\t    props.put(\"mail.debug\", \"true\");\r\n\r\n\t    return mailSender;\r\n\t}\r\n\r\n\t@Bean\r\n\tpublic SimpleMailMessage emailTemplate()\r\n\t{\r\n\t\tSimpleMailMessage message = new SimpleMailMessage();\r\n\t\tmessage.setTo(\"somebody@gmail.com\");\r\n\t\tmessage.setFrom(\"admin@gmail.com\");\r\n\t    message.setText(\"FATAL - Application crash. Save your job !!\");\r\n\t    return message;\r\n\t}\r\n}\r\n\r\n```","```java\r\n<beans>\r\n\r\n    <context:component-scan base-package=\"com.howtodoinjava\" />    \r\n\r\n    <!-- SET default mail properties -->\r\n\t<bean id=\"mailSender\" class=\"org.springframework.mail.javamail.JavaMailSenderImpl\">\r\n\t  \t<property name=\"host\" value=\"smtp.gmail.com\"/>\r\n\t  \t<property name=\"port\" value=\"25\"/>\r\n\t  \t<property name=\"username\" value=\"admin@gmail.com\"/>\r\n\t \t<property name=\"password\" value=\"password\"/>\r\n\t  \t<property name=\"javaMailProperties\">\r\n\t\t\t<props>\r\n\t\t\t    <prop key=\"mail.transport.protocol\">smtp</prop>\r\n\t\t\t    <prop key=\"mail.smtp.auth\">true</prop>\r\n\t\t\t    <prop key=\"mail.smtp.starttls.enable\">true</prop>\r\n\t\t\t    <prop key=\"mail.debug\">true</prop>\r\n\t\t\t</props>\r\n  \t\t</property>\r\n    </bean>\r\n\r\n    <!-- We can have some pre-configured messagess also which are ready to send -->\r\n\r\n    <bean id=\"preConfiguredMessage\" class=\"org.springframework.mail.SimpleMailMessage\">\r\n\t\t<property name=\"to\" value=\"somebody@gmail.com\"></property>\r\n\t\t<property name=\"from\" value=\"admin@gmail.com\"></property>\r\n  \t\t<property name=\"subject\" value=\"FATAL - Application crash. Save your job !!\"/>\r\n    </bean>\r\n</beans>\r\n\r\n```","```java\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.mail.javamail.JavaMailSender;\r\nimport org.springframework.mail.SimpleMailMessage;\r\nimport org.springframework.stereotype.Service;\r\n\r\n@Service(\"emailService\")\r\npublic class EmailService \r\n{\r\n    @Autowired\r\n    private JavaMailSender mailSender;\r\n\r\n    @Autowired\r\n    private SimpleMailMessage preConfiguredMessage;\r\n\r\n    /**\r\n     * This method will send compose and send the message \r\n     * */\r\n    public void sendMail(String to, String subject, String body) \r\n    {\r\n        SimpleMailMessage message = new SimpleMailMessage();\r\n        message.setTo(to);\r\n        message.setSubject(subject);\r\n        message.setText(body);\r\n        mailSender.send(message);\r\n    }\r\n\r\n    /**\r\n     * This method will send a pre-configured message\r\n     * */\r\n    public void sendPreConfiguredMail(String message) \r\n    {\r\n        SimpleMailMessage mailMessage = new SimpleMailMessage(preConfiguredMessage);\r\n        mailMessage.setText(message);\r\n        mailSender.send(mailMessage);\r\n    }\r\n}\r\n\r\n```","```java\r\npublic void sendMailWithAttachment(String to, String subject, String body, String fileToAttach) \r\n{\r\n    MimeMessagePreparator preparator = new MimeMessagePreparator() \r\n    {\r\n        public void prepare(MimeMessage mimeMessage) throws Exception \r\n        {\r\n            mimeMessage.setRecipient(Message.RecipientType.TO, new InternetAddress(to));\r\n            mimeMessage.setFrom(new InternetAddress(\"admin@gmail.com\"));\r\n            mimeMessage.setSubject(subject);\r\n            mimeMessage.setText(body);\r\n\r\n            FileSystemResource file = new FileSystemResource(new File(fileToAttach));\r\n            MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, true);\r\n            helper.addAttachment(\"logo.jpg\", file);\r\n        }\r\n    };\r\n\r\n    try {\r\n        mailSender.send(preparator);\r\n    }\r\n    catch (MailException ex) {\r\n        // simply log it and go on...\r\n        System.err.println(ex.getMessage());\r\n    }\r\n}\r\n\r\n```","```java\r\npublic void sendMailWithInlineResources(String to, String subject, String fileToAttach) \r\n{\r\n    MimeMessagePreparator preparator = new MimeMessagePreparator() \r\n    {\r\n        public void prepare(MimeMessage mimeMessage) throws Exception \r\n        {\r\n            mimeMessage.setRecipient(Message.RecipientType.TO, new InternetAddress(to));\r\n            mimeMessage.setFrom(new InternetAddress(\"admin@gmail.com\"));\r\n            mimeMessage.setSubject(subject);\r\n\r\n            MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, true);\r\n\r\n            helper.setText(\"<html><body><img src='cid:identifier1234'></body></html>\", true);\r\n\r\n            FileSystemResource res = new FileSystemResource(new File(fileToAttach));\r\n            helper.addInline(\"identifier1234\", res);\r\n        }\r\n    };\r\n\r\n    try {\r\n        mailSender.send(preparator);\r\n    }\r\n    catch (MailException ex) {\r\n        // simply log it and go on...\r\n        System.err.println(ex.getMessage());\r\n    }\r\n}\r\n\r\n```","```java\r\nimport org.springframework.context.ApplicationContext;\r\nimport org.springframework.context.support.FileSystemXmlApplicationContext;\r\n\r\npublic class SpringEmailTest \r\n{\r\n\tpublic static void main(String[] args) \r\n    {\r\n        //Create the application context\r\n        ApplicationContext context = new FileSystemXmlApplicationContext\r\n        \t\t\t(\"classpath:com/howtodoinjava/core/email/applicationContext.xml\");\r\n\r\n        //Get the mailer instance\r\n        EmailService mailer = (EmailService) context.getBean(\"emailService\");\r\n\r\n        //Send a composed mail\r\n        mailer.sendMail(\"somebody@gmail.com\", \"Test Subject\", \"Testing body\");\r\n\r\n        //Send a pre-configured mail\r\n        mailer.sendPreConfiguredMail(\"Exception occurred everywhere.. where are you ????\");\r\n    }\r\n}\r\n\r\n```"]