["```java\r\n<aop:config> \r\n    <aop:aspect ref=\"loggingAspect\">\r\n        <aop:pointcut expression=\"execution(* com.howtodoinjava.app.service.impl.EmployeeManagerImpl.*(..))\" id=\"loggingPointcuts\"/>\r\n        <!-- around advice -->\r\n        <aop:around method=\"logAroundAllMethods\" pointcut-ref=\"loggingPointcuts\" />  \r\n    </aop:aspect> \r\n</aop:config>\r\n\r\n```","```java\r\npublic void logAroundAllMethods(ProceedingJoinPoint pjp) throws Throwable \r\n{\r\n    System.out.println(\"****LoggingAspect.logAroundAllMethods() - Before method call\");\r\n\r\n    pjp.proceed();\r\n\r\n    System.out.println(\"****LoggingAspect.logAroundAllMethods() - After method call\");\r\n}\r\n\r\n```","```java\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd;\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <groupId>com.howtodoinjava</groupId>\r\n    <artifactId>SpringAOPExamples</artifactId>\r\n    <version>0.0.1-SNAPSHOT</version>\r\n    <name>Spring AOP Examples</name>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.springframework</groupId>\r\n            <artifactId>spring-context</artifactId>\r\n            <version>4.3.2.RELEASE</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework</groupId>\r\n            <artifactId>spring-context-support</artifactId>\r\n            <version>4.3.2.RELEASE</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework</groupId>\r\n            <artifactId>spring-aop</artifactId>\r\n            <version>4.3.2.RELEASE</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.aspectj</groupId>\r\n            <artifactId>aspectjrt</artifactId>\r\n            <version>1.8.9</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.aspectj</groupId>\r\n            <artifactId>aspectjweaver</artifactId>\r\n            <version>1.8.9</version>\r\n        </dependency>\r\n    </dependencies>\r\n</project>\r\n```","```java\r\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xmlns:aop=\"http://www.springframework.org/schema/aop\"\r\n    xsi:schemaLocation=\"http://www.springframework.org/schema/beans\r\n    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd\r\n    http://www.springframework.org/schema/aop\r\n    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd \">\r\n\r\n    <aop:config> \r\n        <aop:aspect ref=\"loggingAspect\">\r\n            <aop:pointcut expression=\"execution(* com.howtodoinjava.app.service.impl.EmployeeManagerImpl.*(..))\" id=\"loggingPointcuts\"/>\r\n            <aop:around method=\"logAroundAllMethods\" pointcut-ref=\"loggingPointcuts\" />  \r\n        </aop:aspect> \r\n    </aop:config> \r\n\r\n    <!-- Employee manager -->\r\n    <bean id=\"employeeManager\" class=\"com.howtodoinjava.app.service.impl.EmployeeManagerImpl\" />\r\n\r\n    <!-- Logging Aspect -->\r\n    <bean id=\"loggingAspect\" class=\"com.howtodoinjava.app.aspect.LoggingAspect\" />\r\n\r\n</beans>\r\n\r\n```","```java\r\npublic interface EmployeeManager \r\n{\r\n    public EmployeeDTO getEmployeeById(Integer employeeId);\r\n\r\n    public List<EmployeeDTO> getAllEmployee();\r\n\r\n    public void createEmployee(EmployeeDTO employee);\r\n\r\n    public void deleteEmployee(Integer employeeId);\r\n\r\n    public void updateEmployee(EmployeeDTO employee);\r\n}\r\n\r\npublic class EmployeeManagerImpl implements EmployeeManager \r\n{\r\n    public EmployeeDTO getEmployeeById(Integer employeeId) \r\n    {\r\n        System.out.println(\"Method getEmployeeById() called\");\r\n        return new EmployeeDTO();\r\n    }\r\n\r\n    public List<EmployeeDTO> getAllEmployee() \r\n    {\r\n        System.out.println(\"Method getAllEmployee() called\");\r\n        return new ArrayList<EmployeeDTO>();\r\n    }\r\n\r\n    public void createEmployee(EmployeeDTO employee)\r\n    {\r\n        System.out.println(\"Method createEmployee() called\");\r\n    }\r\n\r\n    public void deleteEmployee(Integer employeeId) \r\n    {\r\n        System.out.println(\"Method deleteEmployee() called\");\r\n    }\r\n\r\n    public void updateEmployee(EmployeeDTO employee) \r\n    {\r\n        System.out.println(\"Method updateEmployee() called\");\r\n    }\r\n}\r\n\r\n```","```java\r\npackage com.howtodoinjava.app.aspect;\r\n\r\nimport org.aspectj.lang.ProceedingJoinPoint;\r\n\r\npublic class LoggingAspect {\r\n\r\n    public void logAroundAllMethods(ProceedingJoinPoint pjp) throws Throwable \r\n    {\r\n        System.out.println(\"****LoggingAspect.logAroundAllMethods() - Before method call\");\r\n\r\n        pjp.proceed();\r\n\r\n        System.out.println(\"****LoggingAspect.logAroundAllMethods() - After method call\");\r\n    }\r\n}\r\n\r\n```","```java\r\nimport org.springframework.context.ApplicationContext;\r\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\r\n\r\nimport com.howtodoinjava.app.model.EmployeeDTO;\r\nimport com.howtodoinjava.app.service.EmployeeManager;\r\n\r\npublic class TestMain \r\n{\r\n    @SuppressWarnings(\"resource\")\r\n    public static void main(String[] args) {\r\n\r\n        ApplicationContext context = new ClassPathXmlApplicationContext(\"applicationContext.xml\");\r\n        EmployeeManager manager = (EmployeeManager) context.getBean(\"employeeManager\");\r\n\r\n        manager.getEmployeeById(1);\r\n        manager.createEmployee(new EmployeeDTO());\r\n    }\r\n}\r\n\r\n```","```java\r\n****LoggingAspect.logAroundAllMethods() - Before method call\r\n\r\nMethod getEmployeeById() called\r\n\r\n****LoggingAspect.logAroundAllMethods() - After method call\r\n\r\n****LoggingAspect.logAroundAllMethods() - Before method call\r\n\r\nMethod createEmployee() called\r\n\r\n****LoggingAspect.logAroundAllMethods() - After method call\r\n\r\n```"]