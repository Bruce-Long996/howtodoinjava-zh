["```java\r\nTable of Contents\r\n\r\nModel Classes\r\nAdding PropertyEditorSupport\r\nView layer changes for displaying Dropdown box\r\nDropdown validation changes\r\nTest The Application\r\n```","```java\r\npackage com.howtodoinjava.demo.model;\r\n\r\npublic class DepartmentVO \r\n{\r\n\tpublic DepartmentVO(Integer id, String name) {\r\n\t\tsuper();\r\n\t\tthis.id = id;\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\tprivate Integer id;\r\n\tprivate String name;\r\n\r\n\t//Setters and Getters\r\n\r\n\t@Override\r\n\tpublic String toString() {\r\n\t\treturn \"DepartmentVO [id=\" + id + \", name=\" + name + \"]\";\r\n\t}\r\n}\r\n\r\n```","```java\r\npackage com.howtodoinjava.demo.model;\r\n\r\nimport java.io.Serializable;\r\nimport javax.validation.constraints.NotNull;\r\nimport org.hibernate.validator.constraints.NotEmpty;\r\n\r\npublic class EmployeeVO implements Serializable \r\n{\r\n\tprivate static final long serialVersionUID = 1L;\r\n\r\n\tprivate Integer id;\r\n\r\n\t@NotEmpty\r\n\tprivate String firstName;\r\n\r\n\tprivate String lastName;\r\n\r\n\tprivate String email;\r\n\r\n\t@NotNull\r\n\tprivate DepartmentVO department;\r\n\r\n\t//Setters and Getters\r\n\r\n\t@Override\r\n\tpublic String toString() {\r\n\t\treturn \"EmployeeVO [id=\" + id + \", firstName=\" + firstName\r\n\t\t\t\t+ \", lastName=\" + lastName + \", email=\" + email\r\n\t\t\t\t+ \", department=\" + department + \"]\";\r\n\t}\r\n}\r\n\r\n```","```java\r\npackage com.howtodoinjava.demo.convertor;\r\n\r\nimport java.beans.PropertyEditorSupport;\r\nimport com.howtodoinjava.demo.model.DepartmentVO;\r\n\r\npublic class DepartmentEditor extends PropertyEditorSupport \r\n{\r\n\t//This will be called when user HTTP Post to server a field bound to DepartmentVO\r\n    @Override\r\n    public void setAsText(String id) \r\n    {\r\n    \tDepartmentVO d;\r\n    \tswitch(Integer.parseInt(id))\r\n\t\t{\r\n\t\t\tcase 1: d = new DepartmentVO(1,  \"Human Resource\"); break;\r\n\t\t\tcase 2: d = new DepartmentVO(2,  \"Finance\"); break;\r\n\t\t\tcase 3: d = new DepartmentVO(3,  \"Information Technology\"); break;\r\n\t\t\tdefault: d = null;\r\n\t\t}\r\n        this.setValue(d);\r\n    }\r\n}\r\n\r\n```","```java\r\n@InitBinder\r\npublic void initBinder(WebDataBinder binder) {\r\n\tbinder.registerCustomEditor(DepartmentVO.class, new DepartmentEditor());\r\n}\r\n\r\n```","```java\r\npackage com.howtodoinjava.demo.controller;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Set;\r\n\r\nimport javax.validation.ConstraintViolation;\r\nimport javax.validation.Validation;\r\nimport javax.validation.Validator;\r\nimport javax.validation.ValidatorFactory;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Controller;\r\nimport org.springframework.ui.Model;\r\nimport org.springframework.validation.BindingResult;\r\nimport org.springframework.validation.FieldError;\r\nimport org.springframework.web.bind.WebDataBinder;\r\nimport org.springframework.web.bind.annotation.InitBinder;\r\nimport org.springframework.web.bind.annotation.ModelAttribute;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RequestMethod;\r\nimport org.springframework.web.bind.annotation.SessionAttributes;\r\nimport org.springframework.web.bind.support.SessionStatus;\r\n\r\nimport com.howtodoinjava.demo.convertor.DepartmentEditor;\r\nimport com.howtodoinjava.demo.model.DepartmentVO;\r\nimport com.howtodoinjava.demo.model.EmployeeVO;\r\nimport com.howtodoinjava.demo.service.EmployeeManager;\r\n\r\n@Controller\r\n@RequestMapping(\"/employee-module/addNew\")\r\n@SessionAttributes(\"employee\")\r\npublic class EmployeeController\r\n{\r\n\t@Autowired\r\n\tEmployeeManager manager;\r\n\r\n\tprivate Validator validator;\r\n\r\n\tpublic EmployeeController()\r\n\t{\r\n\t\tValidatorFactory validatorFactory = Validation.buildDefaultValidatorFactory();\r\n\t\tvalidator = validatorFactory.getValidator();\r\n\t}\r\n\r\n\t@InitBinder\r\n    public void initBinder(WebDataBinder binder) {\r\n        binder.registerCustomEditor(DepartmentVO.class, new DepartmentEditor());\r\n    }\r\n\r\n\t@ModelAttribute(\"allDepartments\")\r\n    public List<DepartmentVO> populateDepartments() \r\n    {\r\n        ArrayList<DepartmentVO> departments = new ArrayList<DepartmentVO>();\r\n        departments.add(new DepartmentVO(-1,  \"Select Department\"));\r\n        departments.add(new DepartmentVO(1,  \"Human Resource\"));\r\n        departments.add(new DepartmentVO(2,  \"Finance\"));\r\n        departments.add(new DepartmentVO(3,  \"Information Technology\"));\r\n        return departments;\r\n    }\r\n\r\n\t@RequestMapping(method = RequestMethod.GET)\r\n\tpublic String setupForm(Model model) {\r\n\t\tEmployeeVO employeeVO = new EmployeeVO();\r\n\t\tmodel.addAttribute(\"employee\", employeeVO);\r\n\t\treturn \"addEmployee\";\r\n\t}\r\n\r\n\t@RequestMapping(method = RequestMethod.POST)\r\n\tpublic String submitForm(@ModelAttribute(\"employee\") EmployeeVO employeeVO,\r\n\t\t\tBindingResult result, SessionStatus status) {\r\n\r\n\t\tSet<ConstraintViolation<EmployeeVO>> violations = validator.validate(employeeVO);\r\n\r\n\t\tfor (ConstraintViolation<EmployeeVO> violation : violations) \r\n\t\t{\r\n            String propertyPath = violation.getPropertyPath().toString();\r\n            String message = violation.getMessage();\r\n            // Add JSR-303 errors to BindingResult\r\n            // This allows Spring to display them in view via a FieldError\r\n            result.addError(new FieldError(\"employee\", propertyPath, \"Invalid \"+ propertyPath + \"(\" + message + \")\"));\r\n        }\r\n\r\n\t\tif (result.hasErrors()) {\r\n\t\t\treturn \"addEmployee\";\r\n\t\t}\r\n\t\t// Store the employee information in database\r\n\t\t// manager.createNewRecord(employeeVO);\r\n\r\n\t\tSystem.out.println(employeeVO);\r\n\r\n\t\t// Mark Session Complete\r\n\t\tstatus.setComplete();\r\n\t\treturn \"redirect:addNew/success\";\r\n\t}\r\n\r\n\t@RequestMapping(value = \"/success\", method = RequestMethod.GET)\r\n\tpublic String success(Model model) {\r\n\t\treturn \"addSuccess\";\r\n\t}\r\n}\r\n\r\n```","```java\r\n@ModelAttribute(\"allDepartments\")\r\npublic List<DepartmentVO> populateDepartments() \r\n{\r\n\tArrayList<DepartmentVO> departments = new ArrayList<DepartmentVO>();\r\n\tdepartments.add(new DepartmentVO(-1,  \"Select Department\"));\r\n\tdepartments.add(new DepartmentVO(1,  \"Human Resource\"));\r\n\tdepartments.add(new DepartmentVO(2,  \"Finance\"));\r\n\tdepartments.add(new DepartmentVO(3,  \"Information Technology\"));\r\n\treturn departments;\r\n}\r\n\r\n```","```java\r\n<%@ page contentType=\"text/html;charset=UTF-8\"%>\r\n<%@ taglib prefix=\"form\" uri=\"http://www.springframework.org/tags/form\"%>\r\n<%@ taglib prefix=\"spring\" uri=\"http://www.springframework.org/tags\" %>\r\n\r\n<html>\r\n<head>\r\n\t<title>Add Employee Form</title>\r\n\t<style>\r\n\t.error \r\n\t{\r\n\t\tcolor: #ff0000;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\t</style>\r\n</head>\r\n\r\n<body>\r\n\t<h2><spring:message code=\"lbl.page\" text=\"Add New Employee\" /></h2>\r\n\t<br/>\r\n\t<form:form method=\"post\" modelAttribute=\"employee\">\r\n\t\t<%-- <form:errors path=\"*\" cssClass=\"error\" /> --%>\r\n\t\t<table>\r\n\t\t\t<tr>\r\n\t\t\t\t<td><spring:message code=\"lbl.firstName\" text=\"First Name\" /></td>\r\n\t\t\t\t<td><form:input path=\"firstName\" /></td>\r\n\t\t\t\t<td><form:errors path=\"firstName\" cssClass=\"error\" /></td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td><spring:message code=\"lbl.lastName\" text=\"Last Name\" /></td>\r\n\t\t\t\t<td><form:input path=\"lastName\" /></td>\r\n\t\t\t\t<td><form:errors path=\"lastName\" cssClass=\"error\" /></td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td><spring:message code=\"lbl.email\" text=\"Email Id\" /></td>\r\n\t\t\t\t<td><form:input path=\"email\" /></td>\r\n\t\t\t\t<td><form:errors path=\"email\" cssClass=\"error\" /></td>\r\n\t\t\t</tr>\r\n\r\n\t\t\t<!-- DROPDOWN code -->\r\n\r\n\t\t\t<tr>\r\n\t\t\t\t<td><spring:message code=\"lbl.department\" text=\"Department\" /></td>\r\n\t\t\t\t<td><form:select path=\"department\" items=\"${allDepartments}\" itemValue=\"id\" itemLabel=\"name\" /></td>\r\n\t\t\t\t<td><form:errors path=\"department\" cssClass=\"error\" /></td>\r\n\t\t\t</tr>\r\n\r\n\t\t\t<tr>\r\n\t\t\t\t<td colspan=\"3\"><input type=\"submit\" value=\"Add Employee\"/></td>\r\n\t\t\t</tr>\r\n\t\t</table>\r\n\t</form:form>\r\n</body>\r\n</html>\r\n\r\n```","```java\r\n@NotNull\r\nprivate DepartmentVO department;\r\n\r\n```","```java\r\npublic void setAsText(String id) \r\n{\r\n\tDepartmentVO d;\r\n\tswitch(Integer.parseInt(id))\r\n\t{\r\n\t\tcase 1: d = new DepartmentVO(1,  \"Human Resource\"); break;\r\n\t\tcase 2: d = new DepartmentVO(2,  \"Finance\"); break;\r\n\t\tcase 3: d = new DepartmentVO(3,  \"Information Technology\"); break;\r\n\t\tdefault: d = null;\r\n\t}\r\n\tthis.setValue(d);\r\n}\r\n\r\n```"]