["```java\n<properties>\n\t\t<failOnMissingWebXml>false</failOnMissingWebXml>\n\t\t<spring.version>5.2.0.RELEASE</spring.version>\n</properties>\t\n\n<!-- Spring MVC Dependency -->\n<dependency>\n\t<groupId>org.springframework</groupId>\n\t<artifactId>spring-webmvc</artifactId>\n\t<version>${spring.version}</version>\n</dependency>\n\n<!-- Spring Security Core -->\n<dependency>\n\t<groupId>org.springframework.security</groupId>\n\t<artifactId>spring-security-core</artifactId>\n\t<version>${spring.version}</version>\n</dependency>\n\n<!-- Spring Security Config -->\n<dependency>\n\t<groupId>org.springframework.security</groupId>\n\t<artifactId>spring-security-config</artifactId>\n\t<version>${spring.version}</version>\n</dependency>\n\n<!-- Spring Security Web -->\n<dependency>\n\t<groupId>org.springframework.security</groupId>\n\t<artifactId>spring-security-web</artifactId>\n\t<version>${spring.version}</version>\n</dependency>\n\n```","```java\npackage com.howtodoinjava.demo.spring.config;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\nimport org.springframework.security.crypto.password.PasswordEncoder;\n\n@EnableWebSecurity\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n\t@Autowired\n\tPasswordEncoder passwordEncoder;\n\n\t@Override\n\tprotected void configure(AuthenticationManagerBuilder auth) throws Exception {\n\t\tauth.inMemoryAuthentication()\n\t\t.passwordEncoder(passwordEncoder)\n\t\t.withUser(\"user\").password(passwordEncoder.encode(\"123456\")).roles(\"USER\")\n\t\t.and()\n\t\t.withUser(\"admin\").password(passwordEncoder.encode(\"123456\")).roles(\"USER\", \"ADMIN\");\n\t}\n\n\t@Bean\n\tpublic PasswordEncoder passwordEncoder() {\n\t\treturn new BCryptPasswordEncoder();\n\t}\n\n\t@Override\n\tprotected void configure(HttpSecurity http) throws Exception {\n\t\thttp.authorizeRequests()\n\t\t.antMatchers(\"/login\")\n\t\t\t.permitAll()\n\t\t.antMatchers(\"/**\")\n\t\t\t.hasAnyRole(\"ADMIN\", \"USER\")\n\t\t.and()\n\t\t\t.formLogin()\n\t\t\t.loginPage(\"/login\")\n\t\t\t.defaultSuccessUrl(\"/home\")\n\t\t\t.failureUrl(\"/login?error=true\")\n\t\t\t.permitAll()\n\t\t.and()\n\t\t\t.logout()\n\t\t\t.logoutSuccessUrl(\"/login?logout=true\")\n\t\t\t.invalidateHttpSession(true)\n\t\t\t.permitAll()\n\t\t.and()\n\t\t\t.csrf()\n\t\t\t.disable();\n\t}\n}\n\n```","```java\npackage com.howtodoinjava.demo.spring.config;\n\nimport org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer;\npublic class SpringSecurityInitializer extends AbstractSecurityWebApplicationInitializer {\n\t//no code needed\n}\n\n```","```java\npackage com.howtodoinjava.demo.spring.config;\n\nimport org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;\n\npublic class AppInitializer extends AbstractAnnotationConfigDispatcherServletInitializer {\n\n   @Override\n   protected Class<?>[] getRootConfigClasses() {\n      return new Class[] { HibernateConfig.class, SecurityConfig.class };\n   }\n\n   @Override\n   protected Class<?>[] getServletConfigClasses() {\n      return new Class[] { WebMvcConfig.class };\n   }\n\n   @Override\n   protected String[] getServletMappings() {\n      return new String[] { \"/\" };\n   }\n}\n\n```","```java\npackage com.howtodoinjava.demo.spring.controller;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport org.springframework.security.core.Authentication;\nimport org.springframework.security.core.context.SecurityContextHolder;\nimport org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RequestParam;\n\n@Controller\npublic class LoginController \n{\n\t@RequestMapping(value = \"/login\", method = RequestMethod.GET)\n    public String loginPage(@RequestParam(value = \"error\", required = false) String error, \n    \t\t\t\t\t\t@RequestParam(value = \"logout\", required = false) String logout,\n    \t\t\t\t\t\tModel model) {\n\t\tString errorMessge = null;\n\t\tif(error != null) {\n\t\t\terrorMessge = \"Username or Password is incorrect !!\";\n\t\t}\n\t\tif(logout != null) {\n\t\t\terrorMessge = \"You have been successfully logged out !!\";\n\t\t}\n\t\tmodel.addAttribute(\"errorMessge\", errorMessge);\n        return \"login\";\n    }\n\n    @RequestMapping(value=\"/logout\", method = RequestMethod.GET)\n    public String logoutPage (HttpServletRequest request, HttpServletResponse response) {\n        Authentication auth = SecurityContextHolder.getContext().getAuthentication();\n        if (auth != null){    \n            new SecurityContextLogoutHandler().logout(request, response, auth);\n        }\n        return \"redirect:/login?logout=true\";\n    }\n}\n\n```","```java\n<%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\"%>\n<html>\n<body onload='document.loginForm.username.focus();'>\n\t<h1>Spring Security 5 - Login Form</h1>\n\n\t<c:if test=\"${not empty errorMessge}\"><div style=\"color:red; font-weight: bold; margin: 30px 0px;\">${errorMessge}</div></c:if>\n\n\t<form name='login' action=\"/login\" method='POST'>\n\t\t<table>\n\t\t\t<tr>\n\t\t\t\t<td>UserName:</td>\n\t\t\t\t<td><input type='text' name='username' value=''></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>Password:</td>\n\t\t\t\t<td><input type='password' name='password' /></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td colspan='2'><input name=\"submit\" type=\"submit\" value=\"submit\" /></td>\n\t\t\t</tr>\n\t\t</table>\n\t\t<input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\" />\n\t</form>\n</body>\n</html>\n\n```"]