["```java\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\r\n\t<groupId>com.company</groupId>\r\n\t<artifactId>SpringBootEhcache</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<packaging>jar</packaging>\r\n\r\n\t<name>SpringBootEhcache</name>\r\n\t<url>http://maven.apache.org</url>\r\n\r\n\t<parent>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t\t<version>1.5.13.RELEASE</version>\r\n\t\t<relativePath />\r\n\t</parent>\r\n\r\n\t<properties>\r\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n\t\t<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n\t\t<java.version>1.8</java.version>\r\n\t\t<skipTests>true</skipTests>\r\n\t</properties>\r\n\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-cache</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>net.sf.ehcache</groupId>\r\n\t\t\t<artifactId>ehcache</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>javax.cache</groupId>\r\n\t\t\t<artifactId>cache-api</artifactId>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\r\n\t<build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</project>\r\n\r\n```","```java\r\n<ehcache>\r\n\t<diskStore path=\"java.io.tmpdir\" />\r\n\r\n\t<defaultCache maxElementsInMemory=\"2000\" \r\n\t\t\teternal=\"true\"\r\n\t\t\toverflowToDisk=\"false\" \r\n\t\t\ttimeToLiveSeconds=\"1200\" />\r\n\r\n\t<cache name=\"employeeCache\" \r\n\t\t\tmaxElementsInMemory=\"2000\"\r\n\t\t\teternal=\"false\" \r\n\t\t\toverflowToDisk=\"false\" \r\n\t\t\ttimeToLiveSeconds=\"10000\" />\r\n</ehcache>\r\n\r\n```","```java\r\nimport org.springframework.cache.annotation.EnableCaching;\r\nimport org.springframework.context.annotation.Configuration;\r\n\r\n@Configuration\r\n@EnableCaching\r\npublic class CacheConfig {\r\n\r\n}\r\n\r\n```","```java\r\nimport java.util.HashMap;\r\n\r\nimport org.springframework.cache.annotation.Cacheable;\r\nimport org.springframework.stereotype.Service;\r\n\r\n@Service\r\npublic class EmployeeManager \r\n{\r\n\tstatic HashMap<Long, Employee> db = new HashMap<>();\r\n\r\n\tstatic {\r\n\t\tdb.put(1L, new Employee(1L, \"Alex\", \"Gussin\"));\r\n\t\tdb.put(2L, new Employee(2L, \"Brian\", \"Schultz\"));\r\n\t}\r\n\r\n\t@Cacheable(cacheNames=\"employeeCache\", key=\"#id\")\r\n\tpublic Employee getEmployeeById(Long id) {\r\n\t\tSystem.out.println(\"Getting employee from DB\");\r\n\t\treturn db.get(id);\r\n\t}\r\n}\r\n\r\n```","```java\r\n//1\r\n\r\n@Autowired\r\nprivate CacheManager cacheManager;\r\n\r\n//2\r\n\r\nCache cache = cacheManager.getCache(\"myCache\");\r\ncache.put(3L, \"Hello\");\r\nString value = cache.get(3L).get();\r\n\r\n```","```java\r\nimport java.io.Serializable;\r\n\r\npublic class Employee implements Serializable \r\n{\r\n\tprivate static final long serialVersionUID = 5517244812959569947L;\r\n\r\n\tprivate Long id;\r\n\tprivate String firstName;\r\n\tprivate String lastName;\r\n\r\n\tpublic Employee() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic Employee(Long id, String firstName, String lastName) {\r\n\t\tsuper();\r\n\t\tthis.id = id;\r\n\t\tthis.firstName = firstName;\r\n\t\tthis.lastName = lastName;\r\n\t}\r\n\r\n\t//Getters and setters\r\n\r\n\t@Override\r\n\tpublic String toString() {\r\n\t\treturn \"Employee [id=\" + id + \", firstName=\" + firstName + \", lastName=\" + lastName + \"]\";\r\n\t}\r\n}\r\n\r\n```","```java\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.boot.CommandLineRunner;\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.cache.Cache;\r\nimport org.springframework.cache.CacheManager;\r\nimport org.springframework.context.ApplicationContext;\r\nimport org.springframework.context.annotation.Bean;\r\n\r\n@SpringBootApplication\r\npublic class Application {\r\n\r\n\t@Autowired\r\n\tprivate CacheManager cacheManager;\r\n\r\n\t@Autowired\r\n\tprivate EmployeeManager employeeManager;\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(Application.class, args);\r\n\t}\r\n\r\n\t@Bean\r\n\tpublic CommandLineRunner commandLineRunner(ApplicationContext ctx) {\r\n\t\treturn args -> {\r\n\r\n\t\t\t//This will hit the database \r\n\t\t\tSystem.out.println(employeeManager.getEmployeeById(1L));\r\n\r\n\t\t\t//This will hit the cache - verify the message in console output \r\n\t\t\tSystem.out.println(employeeManager.getEmployeeById(1L));\r\n\r\n\t\t\t//Access cache instance by name\r\n\t\t\tCache cache = cacheManager.getCache(\"employeeCache\");\r\n\r\n\t\t\t//Add entry to cache\r\n\t\t\tcache.put(3L, \"Hello\");\r\n\r\n\t\t\t//Get entry from cache\r\n\t\t\tSystem.out.println(cache.get(3L).get());\r\n\t\t};\r\n\t}\r\n}\r\n\r\n```","```java\r\nGetting employee from DB\r\nEmployee [id=1, firstName=Alex, lastName=Gussin]\r\n\r\nEmployee [id=1, firstName=Alex, lastName=Gussin]\t\t//Fetched from cache\r\n\r\nHello\r\n\r\n```"]