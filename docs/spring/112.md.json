["```java\r\n<dependency>\r\n\t<groupId>org.springframework</groupId>\r\n\t<artifactId>spring-context</artifactId>\r\n\t<version>4.1.4.RELEASE</version>\r\n</dependency>\r\n<dependency>\r\n\t<groupId>org.springframework</groupId>\r\n\t<artifactId>spring-context-support</artifactId>\r\n\t<version>4.1.4.RELEASE</version>\r\n</dependency>\r\n<dependency>\r\n\t<groupId>org.springframework</groupId>\r\n\t<artifactId>spring-aop</artifactId>\r\n\t<version>4.1.4.RELEASE</version>\r\n</dependency>\r\n<dependency>\r\n\t<groupId>org.aspectj</groupId>\r\n\t<artifactId>aspectjrt</artifactId>\r\n\t<version>1.6.11</version>\r\n</dependency>\r\n<dependency>\r\n\t<groupId>org.aspectj</groupId>\r\n\t<artifactId>aspectjweaver</artifactId>\r\n\t<version>1.6.11</version>\r\n</dependency>\r\n\r\n```","```java\r\npublic class EmployeeDTO {\r\n\r\n\tprivate Integer id;\r\n\tprivate String firstName;\r\n\tprivate String lastName;\r\n\r\n\t//Setters and Getters\r\n}\r\n\r\n```","```java\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport org.springframework.stereotype.Component;\r\n\r\n@Component\r\npublic class EmployeeManager \r\n{\r\n\tpublic EmployeeDTO getEmployeeById(Integer employeeId) {\r\n\t\tSystem.out.println(\"Method getEmployeeById() called\");\r\n\t\treturn new EmployeeDTO();\r\n\t}\r\n\r\n\tpublic List<EmployeeDTO> getAllEmployee() {\r\n\t\tSystem.out.println(\"Method getAllEmployee() called\");\r\n\t\treturn new ArrayList<EmployeeDTO>();\r\n\t}\r\n\r\n\tpublic void createEmployee(EmployeeDTO employee) {\r\n\t\tSystem.out.println(\"Method createEmployee() called\");\r\n\t}\r\n\r\n\tpublic void deleteEmployee(Integer employeeId) {\r\n\t\tSystem.out.println(\"Method deleteEmployee() called\");\r\n\t}\r\n\r\n\tpublic void updateEmployee(EmployeeDTO employee) {\r\n\t\tSystem.out.println(\"Method updateEmployee() called\");\r\n\t}\r\n}\r\n\r\n```","```java\r\n@Aspect\r\npublic class EmployeeCRUDAspect {\r\n\r\n\t@Before(\"execution(* EmployeeManager.getEmployeeById(..))\")\r\n\tpublic void logBeforeV1(JoinPoint joinPoint) \r\n\t{\r\n\t\tSystem.out.println(\"EmployeeCRUDAspect.logBeforeV1() : \" + joinPoint.getSignature().getName());\r\n\t}\r\n\r\n\t@Before(\"execution(* EmployeeManager.*(..))\")\r\n\tpublic void logBeforeV2(JoinPoint joinPoint) \r\n\t{\r\n\t\tSystem.out.println(\"EmployeeCRUDAspect.logBeforeV2() : \" + joinPoint.getSignature().getName());\r\n\t}\r\n\r\n\t@After(\"execution(* EmployeeManager.getEmployeeById(..))\")\r\n\tpublic void logAfterV1(JoinPoint joinPoint) \r\n\t{\r\n\t\tSystem.out.println(\"EmployeeCRUDAspect.logAfterV1() : \" + joinPoint.getSignature().getName());\r\n\t}\r\n\r\n\t@After(\"execution(* EmployeeManager.*(..))\")\r\n\tpublic void logAfterV2(JoinPoint joinPoint) \r\n\t{\r\n\t\tSystem.out.println(\"EmployeeCRUDAspect.logAfterV2() : \" + joinPoint.getSignature().getName());\r\n\t}\r\n}\r\n\r\n```","```java\r\n<aop:aspectj-autoproxy />\r\n\r\n<context:component-scan base-package=\"com.howtodoinjava.demo.aop\" />\r\n\r\n<bean id=\"loggingAspect\" class=\"com.howtodoinjava.demo.aop.EmployeeCRUDAspect\" />\r\n\r\n```","```java\r\nimport org.springframework.context.ApplicationContext;\r\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\r\n\r\npublic class TestAOP\r\n{\r\n\t@SuppressWarnings(\"resource\")\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tApplicationContext context = new ClassPathXmlApplicationContext(\"com/howtodoinjava/demo/aop/applicationContext.xml\");\r\n\t\tEmployeeManager manager = context.getBean(EmployeeManager.class);\r\n\r\n\t\tmanager.getEmployeeById(1);\r\n\t\tmanager.createEmployee(new EmployeeDTO());\r\n\t}\r\n}\r\n\r\nOutput:\r\n\r\nEmployeeCRUDAspect.logBeforeV1() : getEmployeeById\r\nEmployeeCRUDAspect.logBeforeV2() : getEmployeeById\r\nMethod getEmployeeById() called\r\nEmployeeCRUDAspect.logAfterV1() : getEmployeeById\r\nEmployeeCRUDAspect.logAfterV2() : getEmployeeById\r\n\r\nEmployeeCRUDAspect.logBeforeV2() : createEmployee\r\nMethod createEmployee() called\r\nEmployeeCRUDAspect.logAfterV2() : createEmployee\r\n\r\n```","```java\r\n@Aspect\r\npublic class EmployeeCRUDAspect {\r\n\t...\r\n}\r\n\r\n```","```java\r\n<bean id=\"loggingAspect\" class=\"com.howtodoinjava.demo.aop.EmployeeCRUDAspect\" />\r\n\r\n```","```java\r\n@Around(\"execution(* EmployeeManager.getEmployeeById(..))\")\r\npublic void logAround(ProceedingJoinPoint joinPoint) throws Throwable \r\n{\r\n\tSystem.out.println(\"Write code for before advise\");\r\n\r\n\tjoinPoint.proceed(); //continue to called method i.e. EmployeeManager.getEmployeeById()\r\n\r\n\tSystem.out.println(\"Write code for after advise\");\r\n}\r\n\r\n```"]