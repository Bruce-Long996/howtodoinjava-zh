["```java\r\n@RequestMapping(value = \"/employees\", produces = MediaType.APPLICATION_XML_VALUE, method = RequestMethod.GET)\r\npublic String getAllEmployeesXML(Model model) \r\n{\r\n\tmodel.addAttribute(\"employees\", getEmployeesCollection());\r\n\treturn \"xmlTemplate\";\r\n}\r\n\r\n```","```java\r\nprivate static void getEmployees()\r\n{\r\n\tfinal String uri = \"http://localhost:8080/springrestexample/employees.xml\";\r\n\r\n\tRestTemplate restTemplate = new RestTemplate();\r\n\tString result = restTemplate.getForObject(uri, String.class);\r\n\r\n\tSystem.out.println(result);\r\n}\r\n\r\n```","```java\r\n@RequestMapping(value = \"/employees\", produces = MediaType.APPLICATION_JSON_VALUE,  method = RequestMethod.GET)\r\npublic String getAllEmployeesJSON(Model model) \r\n{\r\n\tmodel.addAttribute(\"employees\", getEmployeesCollection());\r\n\treturn \"jsonTemplate\";\r\n}\r\n\r\n```","```java\r\nprivate static void getEmployees()\r\n{\r\n\tfinal String uri = \"http://localhost:8080/springrestexample/employees.json\";\r\n\r\n\tRestTemplate restTemplate = new RestTemplate();\r\n\tString result = restTemplate.getForObject(uri, String.class);\r\n\r\n\tSystem.out.println(result);\r\n}\r\n\r\n```","```java\r\n@RequestMapping(value = \"/employees\", produces = MediaType.APPLICATION_JSON_VALUE,  method = RequestMethod.GET)\r\npublic String getAllEmployeesJSON(Model model) \r\n{\r\n\tmodel.addAttribute(\"employees\", getEmployeesCollection());\r\n\treturn \"jsonTemplate\";\r\n}\r\n\r\n```","```java\r\nprivate static void getEmployees()\r\n{\r\n\tfinal String uri = \"http://localhost:8080/springrestexample/employees\";\r\n\r\n\tRestTemplate restTemplate = new RestTemplate();\r\n\r\n\tHttpHeaders headers = new HttpHeaders();\r\n\theaders.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));\r\n\tHttpEntity<String> entity = new HttpEntity<String>(\"parameters\", headers);\r\n\r\n\tResponseEntity<String> result = restTemplate.exchange(uri, HttpMethod.GET, entity, String.class);\r\n\r\n\tSystem.out.println(result);\r\n}\r\n\r\n```","```java\r\n@RequestMapping(value = \"/employees\", produces = MediaType.APPLICATION_XML_VALUE, method = RequestMethod.GET)\r\npublic String getAllEmployeesXML(Model model) \r\n{\r\n\tmodel.addAttribute(\"employees\", getEmployeesCollection());\r\n\treturn \"xmlTemplate\";\r\n}\r\n\r\n```","```java\r\nprivate static void getEmployees()\r\n{\r\n\tfinal String uri = \"http://localhost:8080/springrestexample/employees\";\r\n\tRestTemplate restTemplate = new RestTemplate();\r\n\r\n\tEmployeeListVO result = restTemplate.getForObject(uri, EmployeeListVO.class);\r\n\r\n\tSystem.out.println(result);\r\n}\r\n\r\n```","```java\r\n@RequestMapping(value = \"/employees/{id}\")\r\npublic ResponseEntity<EmployeeVO> getEmployeeById (@PathVariable(\"id\") int id) \r\n{\r\n\tif (id <= 3) {\r\n\t\tEmployeeVO employee = new EmployeeVO(1,\"Lokesh\",\"Gupta\",\"howtodoinjava@gmail.com\");\r\n\t\treturn new ResponseEntity<EmployeeVO>(employee, HttpStatus.OK);\r\n\t}\r\n\treturn new ResponseEntity(HttpStatus.NOT_FOUND);\r\n}\r\n\r\n```","```java\r\nprivate static void getEmployeeById()\r\n{\r\n\tfinal String uri = \"http://localhost:8080/springrestexample/employees/{id}\";\r\n\r\n\tMap<String, String> params = new HashMap<String, String>();\r\n\tparams.put(\"id\", \"1\");\r\n\r\n\tRestTemplate restTemplate = new RestTemplate();\r\n\tEmployeeVO result = restTemplate.getForObject(uri, EmployeeVO.class, params);\r\n\r\n\tSystem.out.println(result);\r\n}\r\n\r\n```","```java\r\n@RequestMapping(value = \"/employees\", method = RequestMethod.POST)\r\npublic ResponseEntity<String> createEmployee(@RequestBody EmployeeVO employee) \r\n{\r\n\tSystem.out.println(employee);\r\n\treturn new ResponseEntity(HttpStatus.CREATED);\r\n}\r\n\r\n```","```java\r\nprivate static void createEmployee()\r\n{\r\n\tfinal String uri = \"http://localhost:8080/springrestexample/employees\";\r\n\r\n\tEmployeeVO newEmployee = new EmployeeVO(-1, \"Adam\", \"Gilly\", \"test@email.com\");\r\n\r\n\tRestTemplate restTemplate = new RestTemplate();\r\n\tEmployeeVO result = restTemplate.postForObject( uri, newEmployee, EmployeeVO.class);\r\n\r\n\tSystem.out.println(result);\r\n}\r\n\r\n```","```java\r\n@RequestMapping(value = \"/employees/{id}\", method = RequestMethod.PUT)\r\npublic ResponseEntity<EmployeeVO> updateEmployee(@PathVariable(\"id\") int id, @RequestBody EmployeeVO employee) \r\n{\r\n\tSystem.out.println(id);\r\n\tSystem.out.println(employee);\r\n\treturn new ResponseEntity<EmployeeVO>(employee, HttpStatus.OK);\r\n}\r\n\r\n```","```java\r\nprivate static void updateEmployee()\r\n{\r\n\tfinal String uri = \"http://localhost:8080/springrestexample/employees/{id}\";\r\n\r\n\tMap<String, String> params = new HashMap<String, String>();\r\n\tparams.put(\"id\", \"2\");\r\n\r\n\tEmployeeVO updatedEmployee = new EmployeeVO(2, \"New Name\", \"Gilly\", \"test@email.com\");\r\n\r\n\tRestTemplate restTemplate = new RestTemplate();\r\n\trestTemplate.put ( uri, updatedEmployee, params);\r\n}\r\n\r\n```","```java\r\n@RequestMapping(value = \"/employees/{id}\", method = RequestMethod.DELETE)\r\npublic ResponseEntity<String> updateEmployee(@PathVariable(\"id\") int id) \r\n{\r\n\tSystem.out.println(id);\r\n\treturn new ResponseEntity(HttpStatus.OK);\r\n}\r\n\r\n```","```java\r\nprivate static void deleteEmployee()\r\n{\r\n\tfinal String uri = \"http://localhost:8080/springrestexample/employees/{id}\";\r\n\r\n\tMap<String, String> params = new HashMap<String, String>();\r\n\tparams.put(\"id\", \"2\");\r\n\r\n\tRestTemplate restTemplate = new RestTemplate();\r\n\trestTemplate.delete ( uri,  params );\r\n}\r\n\r\n```"]