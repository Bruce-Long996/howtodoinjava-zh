["```java\r\n    @Bean\r\n    public SchedulerFactoryBean schedulerFactoryBean() throws IOException, SchedulerException \r\n    {\r\n    \tSchedulerFactoryBean scheduler = new SchedulerFactoryBean();\r\n    \tscheduler.setTriggers(jobOneTrigger(), jobTwoTrigger());\r\n    \tscheduler.setQuartzProperties(quartzProperties());\r\n    \tscheduler.setJobDetails(jobOneDetail(), jobTwoDetail());\r\n    \tscheduler.setApplicationContextSchedulerContextKey(\"applicationContext\");\r\n    \treturn scheduler;\r\n    }\r\n\r\n    ```","```java\r\n    import org.quartz.JobExecutionContext;\r\n    import org.quartz.JobExecutionException;\r\n    import org.springframework.batch.core.Job;\r\n    import org.springframework.batch.core.JobParameters;\r\n    import org.springframework.batch.core.JobParametersBuilder;\r\n    import org.springframework.batch.core.configuration.JobLocator;\r\n    import org.springframework.batch.core.launch.JobLauncher;\r\n    import org.springframework.context.ApplicationContext;\r\n    import org.springframework.scheduling.quartz.QuartzJobBean;\r\n\r\n    public class CustomQuartzJob extends QuartzJobBean {\r\n\r\n    \tprivate String jobName;\r\n    \tprivate JobLauncher jobLauncher;\r\n    \tprivate JobLocator jobLocator;\r\n\r\n    \tpublic String getJobName() {\r\n    \t\treturn jobName;\r\n    \t}\r\n\r\n    \tpublic void setJobName(String jobName) {\r\n    \t\tthis.jobName = jobName;\r\n    \t}\r\n\r\n    \t@Override\r\n    \tprotected void executeInternal(JobExecutionContext context) throws JobExecutionException \r\n    \t{\r\n    \t\ttry \r\n    \t\t{\r\n    \t\t\tApplicationContext applicationContext = (ApplicationContext) \r\n    \t\t\t\t\t\t\tcontext.getScheduler().getContext().get(\"applicationContext\");\r\n\r\n    \t\t\tjobLocator = (JobLocator) applicationContext.getBean(JobLocator.class);\r\n    \t\t\tjobLauncher = (JobLauncher) applicationContext.getBean(JobLauncher.class);\r\n\r\n    \t\t\tJob job = jobLocator.getJob(jobName);\r\n    \t\t\tJobParameters params = new JobParametersBuilder()\r\n    \t\t\t\t\t.addString(\"JobID\", String.valueOf(System.currentTimeMillis()))\r\n    \t\t\t\t\t.toJobParameters();\r\n\r\n    \t\t\tjobLauncher.run(job, params);\r\n    \t\t} \r\n    \t\tcatch (Exception e) \r\n    \t\t{\r\n    \t\t\te.printStackTrace();\r\n    \t\t}\r\n    \t}\r\n    }\r\n\r\n    ```"]