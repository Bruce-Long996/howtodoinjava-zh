["```java\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd;\n\t<modelVersion>4.0.0</modelVersion>\n\t<groupId>com.howtodoinjava.spring5.demo</groupId>\n\t<artifactId>spring5-mvc-hibernate-example</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\t<packaging>war</packaging>\n\t<properties>\n\t\t<failOnMissingWebXml>false</failOnMissingWebXml>\n\t\t<spring.version>5.2.0.RELEASE</spring.version>\n\t\t<hibernate.version>5.2.11.Final</hibernate.version>\n\t\t<hibernate.validator>5.4.1.Final</hibernate.validator>\n\t\t<c3p0.version>0.9.5.2</c3p0.version>\n\t\t<jstl.version>1.2.1</jstl.version>\n\t\t<tld.version>1.1.2</tld.version>\n\t\t<servlets.version>3.1.0</servlets.version>\n\t\t<jsp.version>2.3.1</jsp.version>\n\t\t<hsqldb.version>1.8.0.10</hsqldb.version>\n\t</properties>\n\t<dependencies>\n\t\t<!-- Spring MVC Dependency -->\n\t\t<dependency>\n\t\t\t<groupId>org.springframework</groupId>\n\t\t\t<artifactId>spring-webmvc</artifactId>\n\t\t\t<version>${spring.version}</version>\n\t\t</dependency>\n\n\t\t<!-- Spring ORM -->\n\t\t<dependency>\n\t\t\t<groupId>org.springframework</groupId>\n\t\t\t<artifactId>spring-orm</artifactId>\n\t\t\t<version>${spring.version}</version>\n\t\t</dependency>\n\n\t\t<!-- Hibernate Core -->\n\t\t<dependency>\n\t\t\t<groupId>org.hibernate</groupId>\n\t\t\t<artifactId>hibernate-core</artifactId>\n\t\t\t<version>${hibernate.version}</version>\n\t\t</dependency>\n\n\t\t<!-- Hibernate-C3P0 Integration -->\n\t\t<dependency>\n\t\t\t<groupId>org.hibernate</groupId>\n\t\t\t<artifactId>hibernate-c3p0</artifactId>\n\t\t\t<version>${hibernate.version}</version>\n\t\t</dependency>\n\n\t\t<!-- c3p0 -->\n\t\t<dependency>\n\t\t\t<groupId>com.mchange</groupId>\n\t\t\t<artifactId>c3p0</artifactId>\n\t\t\t<version>${c3p0.version}</version>\n\t\t</dependency>\n\n\t\t<!-- Hibernate Validator -->\n\t\t<dependency>\n\t\t\t<groupId>org.hibernate</groupId>\n\t\t\t<artifactId>hibernate-validator</artifactId>\n\t\t\t<version>${hibernate.validator}</version>\n\t\t</dependency>\n\n\t\t<!-- JSTL Dependency -->\n\t\t<dependency>\n\t\t\t<groupId>javax.servlet.jsp.jstl</groupId>\n\t\t\t<artifactId>javax.servlet.jsp.jstl-api</artifactId>\n\t\t\t<version>${jstl.version}</version>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>taglibs</groupId>\n\t\t\t<artifactId>standard</artifactId>\n\t\t\t<version>${tld.version}</version>\n\t\t</dependency>\n\n\t\t<!-- Servlet Dependency -->\n\t\t<dependency>\n\t\t\t<groupId>javax.servlet</groupId>\n\t\t\t<artifactId>javax.servlet-api</artifactId>\n\t\t\t<version>${servlets.version}</version>\n\t\t\t<scope>provided</scope>\n\t\t</dependency>\n\n\t\t<!-- JSP Dependency -->\n\t\t<dependency>\n\t\t\t<groupId>javax.servlet.jsp</groupId>\n\t\t\t<artifactId>javax.servlet.jsp-api</artifactId>\n\t\t\t<version>${jsp.version}</version>\n\t\t\t<scope>provided</scope>\n\t\t</dependency>\n\n\t\t<!-- HSQL Dependency -->\n\t\t<dependency>\n\t\t\t<groupId>hsqldb</groupId>\n\t\t\t<artifactId>hsqldb</artifactId>\n\t\t\t<version>${hsqldb.version}</version>\n\t\t</dependency>\n\t</dependencies>\n\n\t<build>\n\t\t<sourceDirectory>src/main/java</sourceDirectory>\n\t\t<resources>\n\t\t\t<resource>\n\t\t\t\t<directory>src/main/resources</directory>\n\t\t\t</resource>\n\t\t</resources>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t<version>3.5.1</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t<source>1.8</source>\n\t\t\t\t\t<target>1.8</target>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.tomcat.maven</groupId>\n\t\t\t\t<artifactId>tomcat7-maven-plugin</artifactId>\n\t\t\t\t<version>2.2</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t<path>/</path>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n</project>\n\n```","```java\npackage com.howtodoinjava.demo.spring.config;\n\npublic class AppInitializer extends \n\t\tAbstractAnnotationConfigDispatcherServletInitializer {\n\n   @Override\n   protected Class<?>[] getRootConfigClasses() {\n      return new Class[] { HibernateConfig.class };\n   }\n\n   @Override\n   protected Class<?>[] getServletConfigClasses() {\n      return new Class[] { WebMvcConfig.class };\n   }\n\n   @Override\n   protected String[] getServletMappings() {\n      return new String[] { \"/\" };\n   }\n}\n\n```","```java\npackage com.howtodoinjava.demo.spring.config;\n\nimport org.springframework.context.MessageSource;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.support.ResourceBundleMessageSource;\nimport org.springframework.validation.Validator;\nimport org.springframework.validation.beanvalidation.LocalValidatorFactoryBean;\nimport org.springframework.web.servlet.config.annotation.EnableWebMvc;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\nimport org.springframework.web.servlet.view.InternalResourceViewResolver;\nimport org.springframework.web.servlet.view.JstlView;\n\n@Configuration\n@EnableWebMvc\n@ComponentScan(basePackages = { \"com.howtodoinjava.demo.spring\"})\npublic class WebMvcConfig implements WebMvcConfigurer {\n\n   @Bean\n   public InternalResourceViewResolver resolver() {\n      InternalResourceViewResolver resolver = new InternalResourceViewResolver();\n      resolver.setViewClass(JstlView.class);\n      resolver.setPrefix(\"/WEB-INF/views/\");\n      resolver.setSuffix(\".jsp\");\n      return resolver;\n   }\n\n   @Bean\n   public MessageSource messageSource() {\n      ResourceBundleMessageSource source = new ResourceBundleMessageSource();\n      source.setBasename(\"messages\");\n      return source;\n   }\n\n   @Override\n   public Validator getValidator() {\n      LocalValidatorFactoryBean validator = new LocalValidatorFactoryBean();\n      validator.setValidationMessageSource(messageSource());\n      return validator;\n   }\n}\n\n```","```java\npackage com.howtodoinjava.demo.spring.config;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.ComponentScans;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.orm.hibernate5.HibernateTransactionManager;\nimport org.springframework.orm.hibernate5.LocalSessionFactoryBean;\nimport org.springframework.transaction.annotation.EnableTransactionManagement;\n\nimport com.howtodoinjava.demo.spring.model.User;\n\n@Configuration\n@EnableTransactionManagement\npublic class HibernateConfig {\n\n\t@Autowired\n\tprivate ApplicationContext context;\n\n\t@Bean\n\tpublic LocalSessionFactoryBean getSessionFactory() {\n\t\tLocalSessionFactoryBean factoryBean = new LocalSessionFactoryBean();\n\t\tfactoryBean.setConfigLocation(context.getResource(\"classpath:hibernate.cfg.xml\"));\n\t\tfactoryBean.setAnnotatedClasses(User.class);\n\t\treturn factoryBean;\n\t}\n\n\t@Bean\n\tpublic HibernateTransactionManager getTransactionManager() {\n\t\tHibernateTransactionManager transactionManager = new HibernateTransactionManager();\n\t\ttransactionManager.setSessionFactory(getSessionFactory().getObject());\n\t\treturn transactionManager;\n\t}\n}\n\n```","```java\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!DOCTYPE hibernate-configuration PUBLIC\n\"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\n\"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd\">\n<hibernate-configuration>\n\t<session-factory>\n\t\t<property name=\"hibernate.archive.autodetection\">class,hbm</property>\n\t\t<property name=\"hibernate.dialect\">org.hibernate.dialect.HSQLDialect</property>\n\t\t<property name=\"hibernate.show_sql\">true</property>\n\t\t<property name=\"hibernate.connection.driver_class\">org.hsqldb.jdbcDriver</property>\n\t\t<property name=\"hibernate.connection.username\">sa</property>\n\t\t<property name=\"hibernate.connection.password\"></property>\n\t\t<property name=\"hibernate.connection.url\">jdbc:hsqldb:mem:howtodoinjava</property>\n\t\t<property name=\"hibernate.hbm2ddl.auto\">create</property>\n\n\t\t<property name=\"hibernate.c3p0.min_size\">5</property>\n\t\t<property name=\"hibernate.c3p0.max_size\">20</property>\n\t\t<property name=\"hibernate.c3p0.acquire_increment\">2</property>\n\t\t<property name=\"hibernate.c3p0.acquire_increment\">1800</property>\n\t\t<property name=\"hibernate.c3p0.max_statements\">150</property>\n\t</session-factory>\n</hibernate-configuration>\n\n```","```java\npackage com.howtodoinjava.demo.spring.controller;\n\nimport java.util.Locale;\nimport javax.validation.alid;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.validation.BindingResult;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.ModelAttribute;\nimport org.springframework.web.bind.annotation.PostMapping;\n\nimport com.howtodoinjava.demo.spring.model.User;\nimport com.howtodoinjava.demo.spring.service.UserService;\n\n@Controller\npublic class UserController {\n\n\t@Autowired\n\tprivate UserService userService;\n\n\t@GetMapping(\"/\")\n\tpublic String userForm(Locale locale, Model model) {\n\t\tmodel.addAttribute(\"users\", userService.list());\n\t\treturn \"editUsers\";\n\t}\n\n\t@ModelAttribute(\"user\")\n    public User formBackingObject() {\n        return new User();\n    }\n\n\t@PostMapping(\"/addUser\")\n\tpublic String saveUser(@ModelAttribute(\"user\") @Valid User user, \n\t\t\t\t\t\t\tBindingResult result, Model model) {\n\n\t\tif (result.hasErrors()) {\n\t\t\tmodel.addAttribute(\"users\", userService.list());\n\t\t\treturn \"editUsers\";\n\t\t}\n\n\t\tuserService.save(user);\n\t\treturn \"redirect:/\";\n\t}\n}\n\n```","```java\npublic interface UserService {\n   void save(User user);\n\n   List<User> list();\n}\n\n@Service\npublic class UserServiceImp implements UserService {\n\n   @Autowired\n   private UserDao userDao;\n\n   @Transactional\n   public void save(User user) {\n      userDao.save(user);\n   }\n\n   @Transactional(readOnly = true)\n   public List<User> list() {\n      return userDao.list();\n   }\n}\n\n```","```java\npublic interface UserDao {\n   void save(User user);\n   List<User> list();\n}\n\n@Repository\npublic class UserDaoImp implements UserDao {\n\n   @Autowired\n   private SessionFactory sessionFactory;\n\n   @Override\n   public void save(User user) {\n      sessionFactory.getCurrentSession().save(user);\n   }\n\n   @Override\n   public List<User> list() {\n      @SuppressWarnings(\"unchecked\")\n      TypedQuery<User> query = sessionFactory.getCurrentSession().createQuery(\"from User\");\n      return query.getResultList();\n   }\n}\n\n```","```java\npackage com.howtodoinjava.demo.spring.model;\n\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\nimport javax.validation.constraints.Size;\n\nimport org.hibernate.validator.constraints.Email;\nimport org.hibernate.validator.constraints.NotEmpty;\n\n@Entity\n@Table(name = \"TBL_USERS\")\npublic class User {\n\n   @Id\n   @GeneratedValue\n   @Column(name = \"USER_ID\")\n   private Long id;\n\n   @Column(name = \"USER_NAME\")\n   @Size(max = 20, min = 3, message = \"{user.name.invalid}\")\n   @NotEmpty(message=\"Please Enter your name\")\n   private String name;\n\n   @Column(name = \"USER_EMAIL\", unique = true)\n   @Email(message = \"{user.email.invalid}\")\n   @NotEmpty(message=\"Please Enter your email\")\n   private String email;\n\n   public Long getId() {\n      return id;\n   }\n\n   public void setId(Long id) {\n      this.id = id;\n   }\n\n   public String getName() {\n      return name;\n   }\n\n   public void setName(String name) {\n      this.name = name;\n   }\n\n   public String getEmail() {\n      return email;\n   }\n\n   public void setEmail(String email) {\n      this.email = email;\n   }\n}\n\n```","```java\n<%@ page language=\"java\" contentType=\"text/html; charset=ISO-8859-1\"\n\tpageEncoding=\"ISO-8859-1\"%>\n<%@taglib uri=\"http://www.springframework.org/tags/form\" prefix=\"form\"%>\n<%@taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\"%>\n<!DOCTYPE html>\n<html>\n\t\t<head>\n\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n\t\t<title>Spring5 MVC Hibernate Demo</title>\n\t\t<style type=\"text/css\">\n\t\t\t.error {\n\t\t\t\tcolor: red;\n\t\t\t}\n\t\t\ttable {\n\t\t\t\twidth: 50%;\n\t\t\t\tborder-collapse: collapse;\n\t\t\t\tborder-spacing: 0px;\n\t\t\t}\n\t\t\ttable td {\n\t\t\t\tborder: 1px solid #565454;\n\t\t\t\tpadding: 20px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<h1>Input Form</h1>\n\t\t<form:form action=\"addUser\" method=\"post\" modelAttribute=\"user\">\n\t\t\t<table>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>Name</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<form:input path=\"name\" /> <br />\n\t\t\t\t\t\t<form:errors path=\"name\" cssClass=\"error\" />\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>Email</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<form:input path=\"email\" /> <br />\n\t\t\t\t\t\t<form:errors path=\"email\" cssClass=\"error\" />\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td colspan=\"2\"><button type=\"submit\">Submit</button></td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</form:form>\n\n\t\t<h2>Users List</h2>\n\t\t<table>\n\t\t\t<tr>\n\t\t\t\t<td><strong>Name</strong></td>\n\t\t\t\t<td><strong>Email</strong></td>\n\t\t\t</tr>\n\t\t\t<c:forEach items=\"${users}\" var=\"user\">\n\t\t\t\t<tr>\n\t\t\t\t\t<td>${user.name}</td>\n\t\t\t\t\t<td>${user.email}</td>\n\t\t\t\t</tr>\n\t\t\t</c:forEach>\n\t\t</table>\n\t</body>\n</html>\n\n```","```java\nuser.name.invalid = Name must be between {2} and {1} characters.\nuser.email.invalid = Please enter valid email address.\n\n```","```java\nHibernate: call next value for hibernate_sequence\nHibernate: insert into TBL_USERS (USER_EMAIL, USER_NAME, USER_ID) values (?, ?, ?)\nHibernate: select user0_.USER_ID as USER_ID1_0_, user0_.USER_EMAIL as USER_EMA2_0_, \n\t\t\tuser0_.USER_NAME as USER_NAM3_0_ from TBL_USERS user0_\n\n```"]