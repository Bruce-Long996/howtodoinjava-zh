["```java\r\npackage com.example.howtodoinjava.hellodocker;\r\n\r\nimport java.util.Date;\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\n@SpringBootApplication\r\npublic class HelloDockerApplication {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(HelloDockerApplication.class, args);\r\n\t}\r\n}\r\n\r\n@RestController\r\nclass HelloDockerRestController {\r\n\t@RequestMapping(\"/hello/{name}\")\r\n\tpublic String helloDocker(@PathVariable(value = \"name\") String name) {\r\n\t\tString response = \"Hello \" + name + \" Response received on : \" + new Date();\r\n\t\tSystem.out.println(response);\r\n\t\treturn response;\r\n\r\n\t}\r\n}\r\n\r\n```","```java\r\nserver.port = 9080\r\n\r\n```","```java\r\nFROM openjdk:8-jdk-alpine\r\nVOLUME /tmp\r\nADD target/hello-docker-0.0.1-SNAPSHOT.jar hello-docker-app.jar\r\nENV JAVA_OPTS=\"\"\r\nENTRYPOINT [ \"sh\", \"-c\", \"java $JAVA_OPTS -Djava.security.egd=file:/dev/./urandom -jar /hello-docker-app.jar\" ]\r\n\r\n```","```java\r\n<plugin>\r\n\t<groupId>com.spotify</groupId>\r\n\t<artifactId>dockerfile-maven-plugin</artifactId>\r\n\t<version>1.3.4</version>\r\n\t<configuration>\r\n\t\t<repository>${docker.image.prefix}/${project.artifactId}</repository>\r\n\t</configuration>\r\n</plugin>\r\n<plugin>\r\n\t<groupId>org.apache.maven.plugins</groupId>\r\n\t<artifactId>maven-dependency-plugin</artifactId>\r\n\t<executions>\r\n\t\t<execution>\r\n\t\t\t<id>unpack</id>\r\n\t\t\t<phase>package</phase>\r\n\t\t\t<goals>\r\n\t\t\t\t<goal>unpack</goal>\r\n\t\t\t</goals>\r\n\t\t\t<configuration>\r\n\t\t\t\t<artifactItems>\r\n\t\t\t\t\t<artifactItem>\r\n\t\t\t\t\t\t<groupId>${project.groupId}</groupId>\r\n\t\t\t\t\t\t<artifactId>${project.artifactId}</artifactId>\r\n\t\t\t\t\t\t<version>${project.version}</version>\r\n\t\t\t\t\t</artifactItem>\r\n\t\t\t\t</artifactItems>\r\n\t\t\t</configuration>\r\n\t\t</execution>\r\n\t</executions>\r\n</plugin>\r\n\r\n```","```java\r\n[INFO] Image will be built as hello-howtodoinjava/hello-docker:latest\r\n[INFO]\r\n[INFO] Step 1/5 : FROM openjdk:8-jdk-alpine\r\n[INFO] Pulling from library/openjdk\r\n[INFO] Digest: sha256:2b1f15e04904dd44a2667a07e34c628ac4b239f92f413b587538f801a0a57c88\r\n[INFO] Status: Image is up to date for openjdk:8-jdk-alpine\r\n[INFO]  ---> 478bf389b75b\r\n[INFO] Step 2/5 : VOLUME /tmp\r\n[INFO]  ---> Using cache\r\n[INFO]  ---> f4f6473b3c25\r\n[INFO] Step 3/5 : ADD target/hello-docker-0.0.1-SNAPSHOT.jar hello-docker-app.jar\r\n[INFO]  ---> ce7491518508\r\n[INFO] Removing intermediate container c74867501651\r\n[INFO] Step 4/5 : ENV JAVA_OPTS \"\"\r\n[INFO]  ---> Running in f7cd27710bf3\r\n[INFO]  ---> 086226135205\r\n[INFO] Removing intermediate container f7cd27710bf3\r\n[INFO] Step 5/5 : ENTRYPOINT sh -c java $JAVA_OPTS -Djava.security.egd=file:/dev/./urandom -jar /hello-docker-app.jar\r\n[INFO]  ---> Running in 9ef14a442715\r\n[INFO]  ---> bf14919a32e2\r\n[INFO] Removing intermediate container 9ef14a442715\r\n[INFO] Successfully built bf14919a32e2\r\n[INFO] Successfully tagged hello-howtodoinjava/hello-docker:latest\r\n[INFO]\r\n[INFO] Detected build of image with id bf14919a32e2\r\n[INFO] Building jar: F:\\Study\\Technical Writings\\docker\\hello-docker\\target\\hello-docker-0.0.1-SNAPSHOT-docker-info.jar\r\n[INFO] Successfully built hello-howtodoinjava/hello-docker:latest\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD SUCCESS\r\n[INFO] ------------------------------------------------------------------------\r\n\r\n```","```java\r\ndocker run -p 8080:9080 -t hello-howtodoinjava/hello-docker  --name hello-docker-image\r\n```"]