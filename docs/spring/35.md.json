["```java\r\n<!-- Parent pom is mandatory to control versions of child dependencies -->\r\n<parent>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-parent</artifactId>\r\n    <version>2.1.6.RELEASE</version>\r\n    <relativePath />\r\n</parent>\r\n\r\n<!-- Spring web brings all required dependencies to build web application. -->\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n</dependency>\r\n\r\n```","```java\r\n<dependencies>\r\n\t<dependency>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter</artifactId>\r\n\t</dependency>\r\n\t<dependency>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-json</artifactId>\r\n\t</dependency>\r\n\t<dependency>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-tomcat</artifactId>\r\n\t</dependency>\r\n\t<dependency>\r\n\t\t<groupId>org.hibernate.validator</groupId>\r\n\t\t<artifactId>hibernate-validator</artifactId>\r\n\t</dependency>\r\n\t<dependency>\r\n\t\t<groupId>org.springframework</groupId>\r\n\t\t<artifactId>spring-web</artifactId>\r\n\t</dependency>\r\n\t<dependency>\r\n\t\t<groupId>org.springframework</groupId>\r\n\t\t<artifactId>spring-webmvc</artifactId>\r\n\t</dependency>\r\n</dependencies>\r\n\r\n```","```java\r\n@Configuration\r\n@ConditionalOnClass({ EnableAspectJAutoProxy.class, Aspect.class, Advice.class,\r\n\t\tAnnotatedElement.class })\r\n@ConditionalOnProperty(prefix = \"spring.aop\", name = \"auto\", havingValue = \"true\", matchIfMissing = true)\r\npublic class AopAutoConfiguration \r\n{\r\n\r\n\t@Configuration\r\n\t@EnableAspectJAutoProxy(proxyTargetClass = false)\r\n\t@ConditionalOnProperty(prefix = \"spring.aop\", name = \"proxy-target-class\", havingValue = \"false\", matchIfMissing = false)\r\n\tpublic static class JdkDynamicAutoProxyConfiguration {\r\n\r\n\t}\r\n\r\n\t@Configuration\r\n\t@EnableAspectJAutoProxy(proxyTargetClass = true)\r\n\t@ConditionalOnProperty(prefix = \"spring.aop\", name = \"proxy-target-class\", havingValue = \"true\", matchIfMissing = true)\r\n\tpublic static class CglibAutoProxyConfiguration {\r\n\r\n\t}\r\n\r\n}\r\n\r\n```","```java\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n    <exclusions>\r\n        <exclusion>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-tomcat</artifactId>\r\n        </exclusion>\r\n    </exclusions>\r\n</dependency>\r\n\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-jetty</artifactId>\r\n</dependency>\r\n\r\n```","```java\r\n@SpringBootApplication\r\npublic class MyApplication \r\n{\r\n    public static void main(String[] args) \r\n    {\r\n        SpringApplication.run(Application.class, args);\r\n    }\r\n}\r\n\r\n```","```java\r\n### Server port #########\r\nserver.port=8080\r\n\r\n### Context root ########\r\nserver.contextPath=/home\r\n\r\n```","```java\r\n$ java -jar spring-boot-demo.jar\r\n\r\n```"]