["```java\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\r\nimport org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer;\r\nimport org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurerAdapter;\r\nimport org.springframework.security.oauth2.config.annotation.web.configuration.EnableAuthorizationServer;\r\nimport org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerSecurityConfigurer;\r\n\r\n@Configuration\r\n@EnableAuthorizationServer\r\npublic class OAuth2AuthorizationServer extends AuthorizationServerConfigurerAdapter \r\n{\r\n\t@Autowired\r\n\tprivate BCryptPasswordEncoder passwordEncoder;\r\n\r\n\t@Override\r\n\tpublic void configure(AuthorizationServerSecurityConfigurer security) throws Exception {\r\n\t\tsecurity\r\n\t\t\t.tokenKeyAccess(\"permitAll()\")\r\n\t\t\t.checkTokenAccess(\"isAuthenticated()\")\r\n\t\t\t.allowFormAuthenticationForClients();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void configure(ClientDetailsServiceConfigurer clients) throws Exception {\r\n\t\tclients\r\n\t\t\t.inMemory()\r\n\t\t\t.withClient(\"clientapp\").secret(passwordEncoder.encode(\"123456\"))\r\n\t\t\t.authorizedGrantTypes(\"password\", \"authorization_code\", \"refresh_token\")\r\n\t\t\t.authorities(\"READ_ONLY_CLIENT\")\r\n\t\t\t.scopes(\"read_profile_info\")\r\n\t\t\t.resourceIds(\"oauth2-resource\")\r\n\t\t\t.redirectUris(\"http://localhost:8081/login\")\r\n\t\t\t.accessTokenValiditySeconds(120)\r\n\t\t\t.refreshTokenValiditySeconds(240000);\r\n\t}\r\n}\r\n\r\n```","```java\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\r\nimport org.springframework.security.oauth2.config.annotation.web.configuration.EnableResourceServer;\r\nimport org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfigurerAdapter;\r\n\r\n@Configuration\r\n@EnableResourceServer\r\npublic class OAuth2ResourceServer extends ResourceServerConfigurerAdapter \r\n{\r\n\t@Override\r\n\tpublic void configure(HttpSecurity http) throws Exception {\r\n\t\thttp\r\n        \t.authorizeRequests()\r\n        \t.antMatchers(\"/api/**\").authenticated()\r\n        \t.antMatchers(\"/\").permitAll();\r\n\t}\r\n}\r\n\r\n```","```java\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.core.annotation.Order;\r\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\r\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\r\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\r\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\r\n\r\n@Configuration\r\n@Order(1)\r\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\r\n\r\n    @Override\r\n    protected void configure(HttpSecurity http) throws Exception {\r\n    \thttp\r\n        \t.antMatcher(\"/**\")\r\n\t        \t.authorizeRequests()\r\n\t        \t.antMatchers(\"/oauth/authorize**\", \"/login**\", \"/error**\")\r\n\t        \t.permitAll()\r\n        \t.and()\r\n            \t.authorizeRequests()\r\n            \t.anyRequest().authenticated()\r\n        \t.and()\r\n        \t\t.formLogin().permitAll();\r\n    }\r\n\r\n    @Override\r\n    protected void configure(AuthenticationManagerBuilder auth) throws Exception {\r\n        auth\r\n        \t.inMemoryAuthentication()\r\n            .withUser(\"humptydumpty\").password(passwordEncoder().encode(\"123456\")).roles(\"USER\");\r\n    }\r\n\r\n    @Bean\r\n    public BCryptPasswordEncoder passwordEncoder(){ \r\n        return new BCryptPasswordEncoder(); \r\n    }\r\n}\r\n\r\n```","```java\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.security.core.context.SecurityContextHolder;\r\nimport org.springframework.security.core.userdetails.User;\r\nimport org.springframework.stereotype.Controller;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\n\r\n@Controller\r\npublic class RestResource \r\n{\r\n\t@RequestMapping(\"/api/users/me\")\r\n\tpublic ResponseEntity<UserProfile> profile() \r\n\t{\r\n\t\t//Build some dummy data to return for testing\r\n\t\tUser user = (User) SecurityContextHolder.getContext().getAuthentication().getPrincipal();\r\n\t\tString email = user.getUsername() + \"@howtodoinjava.com\";\r\n\r\n\t\tUserProfile profile = new UserProfile();\r\n\t\tprofile.setName(user.getUsername());\r\n\t\tprofile.setEmail(email);\r\n\r\n\t\treturn ResponseEntity.ok(profile);\r\n\t}\r\n}\r\n\r\n```","```java\r\npublic class UserProfile \r\n{\r\n\tprivate String name;\r\n\tprivate String email;\r\n\r\n\t//Setters and getters\r\n\r\n\t@Override\r\n\tpublic String toString() {\r\n\t\treturn \"UserProfile [name=\" + name + \", email=\" + email + \"]\";\r\n\t}\r\n}\r\n\r\n```","```java\r\nhttp://localhost:8080/oauth/token\r\n\r\nHeaders:\r\n\r\nContent-Type: application/x-www-form-urlencoded\r\nauthorization: Basic Y2xpZW50YXBwOjEyMzQ1Ng==\r\n\r\nForm data - application/x-www-form-urlencoded:\r\n\r\ngrant_type=authorization_code\r\ncode=EAR76A\r\nredirect_uri=http://localhost:8081/login\r\n\r\n```","```java\r\ncurl -X POST --user clientapp:123456 http://localhost:8081/oauth/token \r\n\t\t-H \"content-type: application/x-www-form-urlencoded\" \r\n\t\t-d \"code=FfrzTj&grant_type=authorization_code&redirect_uri=http%3A%2F%2Flocalhost%3A8082%2Flogin&scope=read_user_info\"\r\n\r\n```","```java\r\n{\r\n\t\"access_token\": \"59ddb16b-6943-42f5-8e2f-3acb23f8e3c1\",\r\n\t\"token_type\": \"bearer\",\r\n\t\"refresh_token\": \"cea0aa8f-f732-44fc-8ba3-5e868d94af64\",\r\n\t\"expires_in\": 4815,\r\n\t\"scope\": \"read_profile_info\"\r\n}\r\n\r\n```","```java\r\ncurl -X GET http://localhost:8080/api/users/me \r\n\t -H \"authorization: Bearer 59ddb16b-6943-42f5-8e2f-3acb23f8e3c1\"\r\n\r\n```","```java\r\n{\"name\":\"humptydumpty\",\"email\":\"humptydumpty@howtodoinjava.com\"}\r\n\r\n```","```java\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t\t<version>2.1.4.RELEASE</version>\r\n\t\t<relativePath /> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>com.howtodoinjava</groupId>\r\n\t<artifactId>spring-oauth2-resource-server-demo</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>spring-oauth2-resource-server-demo</name>\r\n\t<description>Demo project for Spring Boot</description>\r\n\r\n\t<properties>\r\n\t\t<java.version>1.8</java.version>\r\n\t</properties>\r\n\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.security.oauth.boot</groupId>\r\n\t\t\t<artifactId>spring-security-oauth2-autoconfigure</artifactId>\r\n\t\t\t<version>2.1.8.RELEASE</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.security</groupId>\r\n\t\t\t<artifactId>spring-security-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\r\n</project>\r\n\r\n```"]