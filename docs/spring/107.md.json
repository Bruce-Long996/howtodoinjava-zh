["```java\r\npackage com.example.springboostudentservice;\r\n\r\nimport java.util.Date;\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\n@RestController\r\n@SpringBootApplication\r\npublic class SpringBootStudentServiceApplication \r\n{\r\n\t@RequestMapping(value = \"/echoStudentName/{name}\")\r\n\tpublic String echoStudentName(@PathVariable(name = \"name\") String name) \r\n\t{\r\n\t\treturn \"hello  <strong style=\\\"color: red;\\\">\" + name + \" </strong> Responsed on : \" + new Date();\r\n\t}\r\n\r\n\t@RequestMapping(value = \"/getStudentDetails/{name}\")\r\n\tpublic Student getStudentDetails(@PathVariable(name = \"name\") String name) \r\n\t{\r\n\t\treturn new Student(name, \"Pune\", \"MCA\");\r\n\t}\r\n\r\n\tpublic static void main(String[] args) \r\n\t{\r\n\t\tSpringApplication.run(SpringBootStudentServiceApplication.class, args);\r\n\t}\r\n}\r\n\r\nclass Student \r\n{\r\n\tString name;\r\n\tString address;\r\n\tString cls;\r\n\r\n\tpublic Student(String name, String address, String cls) {\r\n\t\tsuper();\r\n\t\tthis.name = name;\r\n\t\tthis.address = address;\r\n\t\tthis.cls = cls;\r\n\t}\r\n\r\n\tpublic String getName() {\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic String getAddress() {\r\n\t\treturn address;\r\n\t}\r\n\r\n\tpublic String getCls() {\r\n\t\treturn cls;\r\n\t}\r\n}\r\n\r\n```","```java\r\nspring.application.name=student\r\nserver.port=8090\r\n\r\n```","```java\r\npackage com.example.springbootzuulgatwayproxy;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.cloud.netflix.zuul.EnableZuulProxy;\r\nimport org.springframework.context.annotation.Bean;\r\nimport com.example.springbootzuulgatwayproxy.filters.ErrorFilter;\r\nimport com.example.springbootzuulgatwayproxy.filters.PostFilter;\r\nimport com.example.springbootzuulgatwayproxy.filters.PreFilter;\r\nimport com.example.springbootzuulgatwayproxy.filters.RouteFilter;\r\n\r\n@SpringBootApplication\r\n@EnableZuulProxy\r\npublic class SpringBootZuulgatwayproxyApplication {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(SpringBootZuulgatwayproxyApplication.class, args);\r\n\t}\r\n\r\n\t@Bean\r\n\tpublic PreFilter preFilter() {\r\n\t\treturn new PreFilter();\r\n\t}\r\n\t@Bean\r\n\tpublic PostFilter postFilter() {\r\n\t\treturn new PostFilter();\r\n\t}\r\n\t@Bean\r\n\tpublic ErrorFilter errorFilter() {\r\n\t\treturn new ErrorFilter();\r\n\t}\r\n\t@Bean\r\n\tpublic RouteFilter routeFilter() {\r\n\t\treturn new RouteFilter();\r\n\t}\r\n}\r\n\r\n```","```java\r\n#Zuul routes. Here for /student path, we are routing to localhost:8090 with extra path after that.\r\nzuul.routes.student.url=http://localhost:8090\r\n\r\n#Ribbon is auto integrated with Zuul and for this exercise we are not using that.\r\nribbon.eureka.enabled=false\r\n\r\n#Will start the gateway server @8080\r\nserver.port=8080\r\n\r\n```","```java\r\npackage com.example.springbootzuulgatwayproxy.filters;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport com.netflix.zuul.ZuulFilter;\r\nimport com.netflix.zuul.context.RequestContext;\r\n\r\npublic class PreFilter extends ZuulFilter {\r\n\r\n  @Override\r\n  public String filterType() {\r\n    return \"pre\";\r\n  }\r\n\r\n  @Override\r\n  public int filterOrder() {\r\n    return 1;\r\n  }\r\n\r\n  @Override\r\n  public boolean shouldFilter() {\r\n    return true;\r\n  }\r\n\r\n  @Override\r\n  public Object run() {\r\n    RequestContext ctx = RequestContext.getCurrentContext();\r\n    HttpServletRequest request = ctx.getRequest();\r\n\r\n    System.out.println(\"Request Method : \" + request.getMethod() + \" Request URL : \" + request.getRequestURL().toString());\r\n    return null;\r\n  }\r\n}\r\n\r\n```","```java\r\npackage com.example.springbootzuulgatwayproxy.filters;\r\n\r\nimport com.netflix.zuul.ZuulFilter;\r\n\r\npublic class PostFilter extends ZuulFilter {\r\n\r\n  @Override\r\n  public String filterType() {\r\n    return \"post\";\r\n  }\r\n\r\n  @Override\r\n  public int filterOrder() {\r\n    return 1;\r\n  }\r\n\r\n  @Override\r\n  public boolean shouldFilter() {\r\n    return true;\r\n  }\r\n\r\n  @Override\r\n  public Object run() {\r\n   System.out.println(\"Inside Response Filter\");\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\n```","```java\r\npackage com.example.springbootzuulgatwayproxy.filters;\r\n\r\nimport com.netflix.zuul.ZuulFilter;\r\n\r\npublic class RouteFilter extends ZuulFilter {\r\n\r\n  @Override\r\n  public String filterType() {\r\n    return \"route\";\r\n  }\r\n\r\n  @Override\r\n  public int filterOrder() {\r\n    return 1;\r\n  }\r\n\r\n  @Override\r\n  public boolean shouldFilter() {\r\n    return true;\r\n  }\r\n\r\n  @Override\r\n  public Object run() {\r\n   System.out.println(\"Inside Route Filter\");\r\n    return null;\r\n  }\r\n}\r\n\r\n```","```java\r\npackage com.example.springbootzuulgatwayproxy.filters;\r\n\r\nimport com.netflix.zuul.ZuulFilter;\r\n\r\npublic class ErrorFilter extends ZuulFilter {\r\n\r\n  @Override\r\n  public String filterType() {\r\n    return \"error\";\r\n  }\r\n\r\n  @Override\r\n  public int filterOrder() {\r\n    return 1;\r\n  }\r\n\r\n  @Override\r\n  public boolean shouldFilter() {\r\n    return true;\r\n  }\r\n\r\n  @Override\r\n  public Object run() {\r\n   System.out.println(\"Inside Route Filter\");\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\n```","```java\r\n@Bean\r\npublic PreFilter preFilter() {\r\n\treturn new PreFilter();\r\n}\r\n@Bean\r\npublic PostFilter postFilter() {\r\n\treturn new PostFilter();\r\n}\r\n@Bean\r\npublic ErrorFilter errorFilter() {\r\n\treturn new ErrorFilter();\r\n}\r\n@Bean\r\npublic RouteFilter routeFilter() {\r\n\treturn new RouteFilter();\r\n}\r\n\r\n```"]