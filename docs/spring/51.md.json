["```java\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 \r\n    http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-parent</artifactId>\r\n        <version>2.1.5.RELEASE</version>\r\n        <relativePath /> <!-- lookup parent from repository -->\r\n    </parent>\r\n    <groupId>com.howtodoinjava.demo</groupId>\r\n    <artifactId>SpringBoot2Demo</artifactId>\r\n    <version>0.0.1-SNAPSHOT</version>\r\n    <name>SpringBoot2Demo</name>\r\n    <description>Demo project for Spring Boot</description>\r\n\r\n    <properties>\r\n        <java.version>1.8</java.version>\r\n    </properties>\r\n\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-web</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-data-jpa</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>com.h2database</groupId>\r\n            <artifactId>h2</artifactId>\r\n            <scope>runtime</scope>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-test</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n\r\n</project>\r\n\r\n```","```java\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.GeneratedValue;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.Table;\r\n\r\n@Entity\r\n@Table(name=\"TBL_EMPLOYEES\")\r\npublic class EmployeeEntity {\r\n\r\n    @Id\r\n    @GeneratedValue\r\n    private Long id;\r\n\r\n    @Column(name=\"first_name\")\r\n    private String firstName;\r\n\r\n    @Column(name=\"last_name\")\r\n    private String lastName;\r\n\r\n    @Column(name=\"email\", nullable=false, length=200)\r\n    private String email;\r\n\r\n    //Setters and getters left out for brevity.\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"EmployeeEntity [id=\" + id + \", firstName=\" + firstName + \r\n                \", lastName=\" + lastName + \", email=\" + email   + \"]\";\r\n    }\r\n}\r\n\r\n```","```java\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.stereotype.Repository;\r\n\r\nimport com.howtodoinjava.demo.entity.EmployeeEntity;\r\n\r\n@Repository\r\npublic interface EmployeeRepository extends JpaRepository<EmployeeEntity, Long> {\r\n\r\n}\r\n\r\n```","```java\r\nspring.datasource.url=jdbc:h2:file:~/test\r\nspring.datasource.driverClassName=org.h2.Driver\r\nspring.datasource.username=sa\r\nspring.datasource.password=\r\nspring.jpa.database-platform=org.hibernate.dialect.H2Dialect\r\n\r\n# Enabling H2 Console\r\nspring.h2.console.enabled=true\r\n\r\n# Custom H2 Console URL\r\nspring.h2.console.path=/h2-console\r\n\r\n```","```java\r\n#Turn Statistics on and log SQL stmts\r\n\r\nspring.jpa.show-sql=true\r\nspring.jpa.properties.hibernate.format_sql=true\r\n\r\n#If want to see very extensive logging\r\nspring.jpa.properties.hibernate.generate_statistics=true\r\nlogging.level.org.hibernate.type=trace\r\nlogging.level.org.hibernate.stat=debug\r\n\r\n```","```java\r\n#Schema will be created using schema.sql and data.sql files\r\n\r\nspring.jpa.hibernate.ddl-auto=none\r\n\r\n```","```java\r\nDROP TABLE IF EXISTS TBL_EMPLOYEES;\r\n\r\nCREATE TABLE TBL_EMPLOYEES (\r\n    id INT AUTO_INCREMENT  PRIMARY KEY,\r\n    first_name VARCHAR(250) NOT NULL,\r\n    last_name VARCHAR(250) NOT NULL,\r\n    email VARCHAR(250) DEFAULT NULL\r\n);\r\n\r\n```","```java\r\nINSERT INTO TBL_EMPLOYEES \r\n    (first_name, last_name, email) \r\nVALUES\r\n    ('Lokesh', 'Gupta', 'abc@gmail.com'),\r\n    ('Deja', 'Vu', 'xyz@email.com'),\r\n    ('Caption', 'America', 'cap@marvel.com');\r\n\r\n```","```java\r\npackage com.howtodoinjava.demo;\r\n\r\nimport java.util.Optional;\r\n\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.boot.CommandLineRunner;\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\n\r\nimport com.howtodoinjava.demo.entity.EmployeeEntity;\r\nimport com.howtodoinjava.demo.repository.EmployeeRepository;\r\n\r\n@SpringBootApplication\r\npublic class SpringBoot2DemoApplication implements CommandLineRunner {\r\n\r\n    private Logger logger = LoggerFactory.getLogger(this.getClass());\r\n\r\n    @Autowired\r\n    EmployeeRepository repository;\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(SpringBoot2DemoApplication.class, args);\r\n    }\r\n\r\n    @Override\r\n    public void run(String... args) throws Exception \r\n    {       \r\n        Optional<EmployeeEntity> emp = repository.findById(2L);\r\n\r\n        logger.info(\"Employee id 2 -> {}\", emp.get());\r\n    }\r\n}\r\n\r\n```","```java\r\nTomcat initialized with port(s): 8080 (http)\r\nStarting service [Tomcat]\r\nStarting Servlet engine: [Apache Tomcat/9.0.19]\r\nInitializing Spring embedded WebApplicationContext\r\nRoot WebApplicationContext: initialization completed in 5748 ms\r\n\r\nHikariPool-1 - Starting...\r\nHikariPool-1 - Start completed.\r\nHHH000204: Processing PersistenceUnitInfo [\r\n    name: default\r\n    ...]\r\nHHH000412: Hibernate Core {5.3.10.Final}\r\nHHH000206: hibernate.properties not found\r\nHCANN000001: Hibernate Commons Annotations {5.0.4.Final}\r\nHHH000400: Using dialect: org.hibernate.dialect.H2Dialect\r\n\r\nInitialized JPA EntityManagerFactory for persistence unit 'default'\r\nInitializing ExecutorService 'applicationTaskExecutor'\r\nspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. \r\nExplicitly configure spring.jpa.open-in-view to disable this warning\r\nTomcat started on port(s): 8080 (http) with context path ''\r\nStarted SpringBoot2DemoApplication in 17.638 seconds (JVM running for 19.1)\r\n\r\nHibernate: \r\n    select\r\n        employeeen0_.id as id1_0_0_,\r\n        employeeen0_.email as email2_0_0_,\r\n        employeeen0_.first_name as first_na3_0_0_,\r\n        employeeen0_.last_name as last_nam4_0_0_ \r\n    from\r\n        tbl_employees employeeen0_ \r\n    where\r\n        employeeen0_.id=?\r\n\r\nEmployee id 2 -> EmployeeEntity [id=2, firstName=Deja, lastName=Vu, email=xyz@email.com]\r\n\r\n```"]