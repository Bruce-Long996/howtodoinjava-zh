["```java\nimport org.springframework.batch.item.ItemProcessor;\nimport com.howtodoinjava.demo.model.Employee;\n\npublic class ValidationProcessor implements ItemProcessor<Employee,Employee> \n{\n\tpublic Employee process(Employee employee) throws Exception \n\t{\n\t\tif (employee.getId() == null){\n\t\t\tSystem.out.println(\"Missing employee id : \" + employee.getId());\n\t\t\treturn null;\n\t\t} \n\n\t\ttry \n\t\t{\n\t\t\tif(Integer.valueOf(employee.getId()) <= 0) {\n\t\t\t\tSystem.out.println(\"Invalid employee id : \" + employee.getId());\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\tcatch (NumberFormatException e) {\n\t\t\tSystem.out.println(\"Invalid employee id : \" + employee.getId());\n\t\t\treturn null;\n\t\t}\n\t\treturn employee;\n\t}\n}\n\n```","```java\npackage com.howtodoinjava.demo.config;\n\nimport org.springframework.batch.core.Job;\nimport org.springframework.batch.core.Step;\nimport org.springframework.batch.core.configuration.annotation.EnableBatchProcessing;\nimport org.springframework.batch.core.configuration.annotation.JobBuilderFactory;\nimport org.springframework.batch.core.configuration.annotation.StepBuilderFactory;\nimport org.springframework.batch.core.launch.support.RunIdIncrementer;\nimport org.springframework.batch.item.ItemProcessor;\nimport org.springframework.batch.item.file.FlatFileItemReader;\nimport org.springframework.batch.item.file.LineMapper;\nimport org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper;\nimport org.springframework.batch.item.file.mapping.DefaultLineMapper;\nimport org.springframework.batch.item.file.transform.DelimitedLineTokenizer;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.io.Resource;\n\nimport com.howtodoinjava.demo.model.Employee;\n\n@Configuration\n@EnableBatchProcessing\npublic class BatchConfig {\n\t@Autowired\n\tprivate JobBuilderFactory jobBuilderFactory;\n\n\t@Autowired\n\tprivate StepBuilderFactory stepBuilderFactory;\n\n\t@Value(\"/input/inputData.csv\")\n\tprivate Resource inputResource;\n\n\t@Bean\n\tpublic Job readCSVFilesJob() {\n\t\treturn jobBuilderFactory\n\t\t\t\t.get(\"readCSVFilesJob\")\n\t\t\t\t.incrementer(new RunIdIncrementer())\n\t\t\t\t.start(step1())\n\t\t\t\t.build();\n\t}\n\n\t@Bean\n\tpublic Step step1() {\n\t\treturn stepBuilderFactory\n\t\t\t\t.get(\"step1\")\n\t\t\t\t.<Employee, Employee>chunk(1)\n\t\t\t\t.reader(reader())\n\t\t\t\t.processor(processor())\n\t\t\t\t.writer(writer())\n\t\t\t\t.build();\n\t}\n\n\t@Bean\n\tpublic ItemProcessor<Employee, Employee> processor() {\n\t\treturn new ValidationProcessor();\n\t}\n\n\t@Bean\n\tpublic FlatFileItemReader<Employee> reader() {\n\t\tFlatFileItemReader<Employee> itemReader = new FlatFileItemReader<Employee>();\n\t\titemReader.setLineMapper(lineMapper());\n\t\titemReader.setLinesToSkip(1);\n\t\titemReader.setResource(inputResource);\n\t\treturn itemReader;\n\t}\n\n\t@Bean\n\tpublic LineMapper<Employee> lineMapper() {\n\t\tDefaultLineMapper<Employee> lineMapper = new DefaultLineMapper<Employee>();\n\t\tDelimitedLineTokenizer lineTokenizer = new DelimitedLineTokenizer();\n\t\tlineTokenizer.setNames(new String[] { \"id\", \"firstName\", \"lastName\" });\n\t\tlineTokenizer.setIncludedFields(new int[] { 0, 1, 2 });\n\t\tBeanWrapperFieldSetMapper<Employee> fieldSetMapper = new BeanWrapperFieldSetMapper<Employee>();\n\t\tfieldSetMapper.setTargetType(Employee.class);\n\t\tlineMapper.setLineTokenizer(lineTokenizer);\n\t\tlineMapper.setFieldSetMapper(fieldSetMapper);\n\t\treturn lineMapper;\n\t}\n\n\t@Bean\n\tpublic ConsoleItemWriter<Employee> writer() {\n\t\treturn new ConsoleItemWriter<Employee>();\n\t}\n}\n\n```","```java\nid,firstName,lastName\n1,Lokesh,Gupta\n2,Amit,Mishra\n3,Pankaj,Kumar\nabc,David,Miller\n4,David,Walsh\n\n```","```java\n2018-07-11 14:59:00 INFO  - Job: [SimpleJob: [name=readCSVFilesJob]] launched with the following parameters: [{JobID=1531301340005}]\n\n2018-07-11 14:59:00 INFO  - Executing step: [step1]\nEmployee [id=1, firstName=Lokesh, lastName=Gupta]\nEmployee [id=2, firstName=Amit, lastName=Mishra]\nEmployee [id=3, firstName=Pankaj, lastName=Kumar]\n\nInvalid employee id : abc\n\nEmployee [id=4, firstName=David, lastName=Walsh]\n\n2018-07-11 14:59:00 INFO  - Job: [SimpleJob: [name=readCSVFilesJob]] completed with the following parameters: [{JobID=1531301340005}] and the following status: [COMPLETED]\n\n```"]