["```java\r\npackage com.example.howtodoinjava.springeurekaserver;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;\r\n\r\n@EnableEurekaServer\r\n@SpringBootApplication\r\npublic class SpringEurekaServerApplication {\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(SpringEurekaServerApplication.class, args);\r\n    }\r\n}\r\n\r\n```","```java\r\nserver:\r\n  port: ${PORT:8761} # Indicate the default PORT where this service will be started\r\n\r\neureka:\r\n  client:\r\n    registerWithEureka: false\t#telling the server not to register himself in the service registry\r\n    fetchRegistry: false\r\n  server:\r\n    waitTimeInMsWhenSyncEmpty: 0\t#wait time for subsequent sync\r\n\r\n```","```java\r\nspring:\r\n  application:\r\n    name: eureka\r\n  cloud:\r\n    config:\r\n      uri: ${CONFIG_SERVER_URL:http://localhost:8888}\r\n\r\n```","```java\r\npackage com.example.howtodoinjava.springeurekaclientstudentservice;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.cloud.netflix.eureka.EnableEurekaClient;\r\n\r\n@SpringBootApplication\r\n@EnableEurekaClient\r\npublic class SpringEurekaClientStudentServiceApplication {\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(SpringEurekaClientStudentServiceApplication.class, args);\r\n    }\r\n}\r\n\r\n```","```java\r\nserver:\r\n  port: 8098\t#default port where the service will be started\r\n\r\neureka:\t\t\t#tells about the Eureka server details and its refresh time\r\n  instance:\r\n    leaseRenewalIntervalInSeconds: 1\r\n    leaseExpirationDurationInSeconds: 2\r\n  client:\r\n    serviceUrl:\r\n      defaultZone: http://127.0.0.1:8761/eureka/\r\n    healthcheck:\r\n      enabled: true\r\n    lease:\r\n      duration: 5\r\n\r\nspring:\t\t\r\n  application:\r\n    name: student-service \t#current service name to be used by the eureka server\r\n\r\nmanagement:\r\n  security:\r\n    enabled: false\t#disable the spring security on the management endpoints like /env, /refresh etc. \r\n\r\nlogging:\r\n  level:\r\n    com.example.howtodoinjava: DEBUG\r\n\r\n```","```java\r\npackage com.example.howtodoinjava.springeurekaclientstudentservice.controller;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RequestMethod;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.example.howtodoinjava.springeurekaclientstudentservice.domain.Student;\r\n\r\n@RestController\r\npublic class StudentServiceController {\r\n\r\n\tprivate static Map<String, List<Student>> schooDB = new HashMap<String, List<Student>>();\r\n\r\n\tstatic {\r\n\t\tschooDB = new HashMap<String, List<Student>>();\r\n\r\n\t\tList<Student> lst = new ArrayList<Student>();\r\n\t\tStudent std = new Student(\"Sajal\", \"Class IV\");\r\n\t\tlst.add(std);\r\n\t\tstd = new Student(\"Lokesh\", \"Class V\");\r\n\t\tlst.add(std);\r\n\r\n\t\tschooDB.put(\"abcschool\", lst);\r\n\r\n\t\tlst = new ArrayList<Student>();\r\n\t\tstd = new Student(\"Kajal\", \"Class III\");\r\n\t\tlst.add(std);\r\n\t\tstd = new Student(\"Sukesh\", \"Class VI\");\r\n\t\tlst.add(std);\r\n\r\n\t\tschooDB.put(\"xyzschool\", lst);\r\n\r\n\t}\r\n\r\n\t@RequestMapping(value = \"/getStudentDetailsForSchool/{schoolname}\", method = RequestMethod.GET)\r\n\tpublic List<Student> getStudents(@PathVariable String schoolname) {\r\n\t\tSystem.out.println(\"Getting Student details for \" + schoolname);\r\n\r\n\t\tList<Student> studentList = schooDB.get(schoolname);\r\n\t\tif (studentList == null) {\r\n\t\t\tstudentList = new ArrayList<Student>();\r\n\t\t\tStudent std = new Student(\"Not Found\", \"N/A\");\r\n\t\t\tstudentList.add(std);\r\n\t\t}\r\n\t\treturn studentList;\r\n\t}\r\n}\r\n\r\n```","```java\r\npublic class Student \r\n{\r\n\tprivate String name;\r\n\tprivate String className;\r\n\r\n\tpublic Student(String name, String className) {\r\n\t\tsuper();\r\n\t\tthis.name = name;\r\n\t\tthis.className = className;\r\n\t}\r\n\r\n\tpublic String getName() {\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic void setName(String name) {\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\tpublic String getClassName() {\r\n\t\treturn className;\r\n\t}\r\n\r\n\tpublic void setClassName(String className) {\r\n\t\tthis.className = className;\r\n\t}\r\n}\r\n\r\n```","```java\r\npackage com.example.howtodoinjava.springeurekaclientschoolservice;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.cloud.netflix.eureka.EnableEurekaClient;\r\n\r\n@SpringBootApplication\r\n@EnableEurekaClient\r\npublic class SpringEurekaClientSchoolServiceApplication {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(SpringEurekaClientSchoolServiceApplication.class, args);\r\n\t}\r\n}\r\n\r\n```","```java\r\nserver:\r\n  port: 9098\t#port number\r\n\r\neureka:\r\n  instance:\r\n    leaseRenewalIntervalInSeconds: 1\r\n    leaseExpirationDurationInSeconds: 2\r\n  client:\r\n    serviceUrl:\r\n      defaultZone: http://127.0.0.1:8761/eureka/\r\n    healthcheck:\r\n      enabled: true\r\n    lease:\r\n      duration: 5\r\n\r\nspring:\r\n  application:\r\n    name: school-service \t#service name\r\n\r\nlogging:\r\n  level:\r\n    com.example.howtodoinjava: DEBUG\r\n\r\n```","```java\r\npackage com.example.howtodoinjava.springeurekaclientschoolservice.controller;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.cloud.client.loadbalancer.LoadBalanced;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.core.ParameterizedTypeReference;\r\nimport org.springframework.http.HttpMethod;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RequestMethod;\r\nimport org.springframework.web.bind.annotation.RestController;\r\nimport org.springframework.web.client.RestTemplate;\r\n\r\n@RestController\r\npublic class SchoolServiceController {\r\n\t@Autowired\r\n\tRestTemplate restTemplate;\r\n\r\n\t@RequestMapping(value = \"/getSchoolDetails/{schoolname}\", method = RequestMethod.GET)\r\n\tpublic String getStudents(@PathVariable String schoolname) \r\n\t{\r\n\t\tSystem.out.println(\"Getting School details for \" + schoolname);\r\n\r\n\t\tString response = restTemplate.exchange(\"http://student-service/getStudentDetailsForSchool/{schoolname}\",\r\n\t\t\t\t\t\t\t\tHttpMethod.GET, null, new ParameterizedTypeReference<String>() {}, schoolname).getBody();\r\n\r\n\t\tSystem.out.println(\"Response Received as \" + response);\r\n\r\n\t\treturn \"School Name -  \" + schoolname + \" \\n Student Details \" + response;\r\n\t}\r\n\r\n\t@Bean\r\n\t@LoadBalanced\r\n\tpublic RestTemplate restTemplate() {\r\n\t\treturn new RestTemplate();\r\n\t}\r\n}\r\n\r\n```"]