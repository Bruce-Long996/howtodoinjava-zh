["```java\r\n@Configuration\r\n\r\n@ConditionalOnClass({ EnableAspectJAutoProxy.class, \r\n\t\t\tAspect.class, \r\n\t\t\tAdvice.class, \r\n\t\t\tAnnotatedElement.class })\r\n\r\n@ConditionalOnProperty(prefix = \"spring.aop\", \r\n\t\t\tname = \"auto\", \r\n\t\t\thavingValue = \"true\", \r\n\t\t\tmatchIfMissing = true)\r\n\r\npublic class AopAutoConfiguration \r\n{\r\n\t//code\r\n}\r\n\r\n```","```java\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n</dependency>\r\n\r\n```","```java\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n    <exclusions>\r\n        <exclusion>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-tomcat</artifactId>\r\n        </exclusion>\r\n    </exclusions>\r\n</dependency>\r\n\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-jetty</artifactId>\r\n</dependency>\r\n\r\n```","```java\r\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n    <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n        xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n        <modelVersion>4.0.0</modelVersion>\r\n\r\n        <groupId>com.example</groupId>\r\n        <artifactId>myproject</artifactId>\r\n        <version>0.0.1-SNAPSHOT</version>\r\n\r\n        <parent>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-parent</artifactId>\r\n            <version>2.2.1.RELEASE</version>\r\n        </parent>\r\n    </project>\r\n\r\n    ```","```java\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-web</artifactId>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n    ```","```java\r\n    import org.springframework.boot.SpringApplication;\r\n    import org.springframework.boot.autoconfigure.SpringBootApplication;\r\n\r\n    @SpringBootApplication\r\n    public class MyApplication \r\n    {\r\n    \tpublic static void main(String[] args) {\r\n    \t\tSpringApplication.run(MyApplication.class, args);\r\n    \t}\r\n    }\r\n\r\n    ```","```java\r\n<build>\r\n    <plugins>\r\n        <plugin>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-maven-plugin</artifactId>\r\n        </plugin>\r\n    </plugins>\r\n</build>\r\n\r\n```","```java\r\n<packaging>war</packaging>\r\n\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-tomcat</artifactId>\r\n    <scope>provided</scope>\r\n</dependency>\r\n\r\n```","```java\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-actuator</artifactId>\r\n</dependency>\r\n\r\n```","```java\r\nlog.level.my-package = debug    \t//Kebab case\r\nlog.level.my_package = debug \t\t//Underscore notation\r\nlog.level.myPackage = debug \t\t//Camel case\r\nLOG.LEVEL.MY-PACKAGE = debug \t\t//Upper case format\r\n\r\n```","```java\r\n@SpringBootTest(classes = SpringBootDemoApplication.class, \r\n        webEnvironment = WebEnvironment.RANDOM_PORT)\r\npublic class EmployeeControllerIntegrationTests \r\n{\r\n    @LocalServerPort\r\n    private int port;\r\n\r\n    @Autowired\r\n    private TestRestTemplate restTemplate;\r\n\r\n    //tests\r\n}\r\n\r\n```","```java\r\nserver.port=8443\r\nserver.ssl.key-alias=selfsigned_localhost_sslserver\r\nserver.ssl.key-password=changeit\r\nserver.ssl.key-store=classpath:ssl-server.jks\r\nserver.ssl.key-store-provider=SUN\r\nserver.ssl.key-store-type=JKS\r\n\r\n```"]