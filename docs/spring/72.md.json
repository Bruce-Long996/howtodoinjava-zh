["```java\r\n    <dependencies>\r\n    \t<dependency>\r\n    \t\t<groupId>org.springframework.boot</groupId>\r\n    \t\t<artifactId>spring-boot-starter-jersey</artifactId>\r\n    \t</dependency>\r\n    \t<dependency>\r\n    \t\t<groupId>org.springframework.boot</groupId>\r\n    \t\t<artifactId>spring-boot-starter-test</artifactId>\r\n    \t\t<scope>test</scope>\r\n    \t</dependency>\r\n    </dependencies>\r\n\r\n    ```","```java\r\npackage com.howtodoinjava.jerseydemo;\r\n\r\nimport java.net.URI;\r\nimport java.net.URISyntaxException;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\nimport javax.ws.rs.Consumes;\r\nimport javax.ws.rs.DELETE;\r\nimport javax.ws.rs.GET;\r\nimport javax.ws.rs.POST;\r\nimport javax.ws.rs.PUT;\r\nimport javax.ws.rs.Path;\r\nimport javax.ws.rs.PathParam;\r\nimport javax.ws.rs.Produces;\r\nimport javax.ws.rs.core.Response;\r\nimport javax.xml.bind.annotation.XmlAccessType;\r\nimport javax.xml.bind.annotation.XmlAccessorType;\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\n\r\n@XmlAccessorType(XmlAccessType.NONE)\r\n@XmlRootElement(name = \"users\")\r\n@Path(\"/users\")\r\npublic class UserResource \r\n{\r\n\tprivate static Map<Integer, User> DB = new HashMap<>(); \r\n\r\n\t@GET\r\n\t@Produces(\"application/json\")\r\n\tpublic Users getAllUsers() {\r\n\t\tUsers users = new Users();\r\n\t\tusers.setUsers(new ArrayList<>(DB.values()));\r\n\t\treturn users;\r\n\t}\r\n\r\n\t@POST\r\n\t@Consumes(\"application/json\")\r\n\tpublic Response createUser(User user) throws URISyntaxException \r\n\t{\r\n\t\tif(user.getFirstName() == null || user.getLastName() == null) {\r\n\t\t\treturn Response.status(400).entity(\"Please provide all mandatory inputs\").build();\r\n\t\t}\r\n\t\tuser.setId(DB.values().size()+1);\r\n\t\tuser.setUri(\"/user-management/\"+user.getId());\r\n\t\tDB.put(user.getId(), user);\r\n\t\treturn Response.status(201).contentLocation(new URI(user.getUri())).build();\r\n\t}\r\n\r\n\t@GET\r\n\t@Path(\"/{id}\")\r\n\t@Produces(\"application/json\")\r\n\tpublic Response getUserById(@PathParam(\"id\") int id) throws URISyntaxException \r\n\t{\r\n\t\tUser user = DB.get(id);\r\n\t\tif(user == null) {\r\n\t\t\treturn Response.status(404).build();\r\n\t\t}\r\n\t\treturn Response\r\n\t\t\t\t.status(200)\r\n\t\t\t\t.entity(user)\r\n\t\t\t\t.contentLocation(new URI(\"/user-management/\"+id)).build();\r\n\t}\r\n\r\n\t@PUT\r\n\t@Path(\"/{id}\")\r\n\t@Consumes(\"application/json\")\r\n\t@Produces(\"application/json\")\r\n\tpublic Response updateUser(@PathParam(\"id\") int id, User user) throws URISyntaxException \r\n\t{\r\n\t\tUser temp = DB.get(id);\r\n\t\tif(user == null) {\r\n\t\t\treturn Response.status(404).build();\r\n\t\t}\r\n\t\ttemp.setFirstName(user.getFirstName());\r\n\t\ttemp.setLastName(user.getLastName());\r\n\t\tDB.put(temp.getId(), temp);\r\n\t\treturn Response.status(200).entity(temp).build();\r\n\t}\r\n\r\n\t@DELETE\r\n\t@Path(\"/{id}\")\r\n\tpublic Response deleteUser(@PathParam(\"id\") int id)\tthrows URISyntaxException {\r\n\t\tUser user = DB.get(id);\r\n\t\tif(user != null) {\r\n\t\t\tDB.remove(user.getId());\r\n\t\t\treturn Response.status(200).build();\r\n\t\t}\r\n\t\treturn Response.status(404).build();\r\n\t}\r\n\r\n\tstatic \r\n\t{\r\n\t\tUser user1 = new User();\r\n\t\tuser1.setId(1);\r\n\t\tuser1.setFirstName(\"John\");\r\n\t\tuser1.setLastName(\"Wick\");\r\n\t\tuser1.setUri(\"/user-management/1\");\r\n\r\n\t\tUser user2 = new User();\r\n\t\tuser2.setId(2);\r\n\t\tuser2.setFirstName(\"Harry\");\r\n\t\tuser2.setLastName(\"Potter\");\r\n\t\tuser2.setUri(\"/user-management/2\");\r\n\r\n\t\tDB.put(user1.getId(), user1);\r\n\t\tDB.put(user2.getId(), user2);\r\n\t}\r\n}\r\n\r\n```","```java\r\npackage com.howtodoinjava.jerseydemo;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport javax.xml.bind.annotation.XmlAccessType;\r\nimport javax.xml.bind.annotation.XmlAccessorType;\r\nimport javax.xml.bind.annotation.XmlElement;\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\n\r\n@XmlAccessorType(XmlAccessType.NONE)\r\n@XmlRootElement(name = \"users\")\r\npublic class Users {\r\n\r\n    @XmlElement(name=\"user\")\r\n    private ArrayList<User> users;\r\n\r\n    public ArrayList<User> getUsers() {\r\n        return users;\r\n    }\r\n\r\n    public void setUsers(ArrayList<User> users) {\r\n        this.users = users;\r\n    }\r\n}\r\n\r\n```","```java\r\npackage com.howtodoinjava.jerseydemo;\r\n\r\nimport java.io.Serializable;\r\n\r\nimport javax.xml.bind.annotation.XmlAccessType;\r\nimport javax.xml.bind.annotation.XmlAccessorType;\r\nimport javax.xml.bind.annotation.XmlAttribute;\r\nimport javax.xml.bind.annotation.XmlElement;\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\n\r\n@XmlAccessorType(XmlAccessType.NONE)\r\n@XmlRootElement(name = \"user\")\r\npublic class User implements Serializable {\r\n\r\n    private static final long serialVersionUID = 1L;\r\n\r\n    @XmlAttribute(name = \"id\")\r\n    private int id;\r\n\r\n    @XmlAttribute(name=\"uri\")\r\n    private String uri;\r\n\r\n    @XmlElement(name = \"firstName\")\r\n    private String firstName;\r\n\r\n    @XmlElement(name = \"lastName\")\r\n    private String lastName;\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n    public String getFirstName() {\r\n        return firstName;\r\n    }\r\n    public void setFirstName(String firstName) {\r\n        this.firstName = firstName;\r\n    }\r\n    public String getLastName() {\r\n        return lastName;\r\n    }\r\n    public void setLastName(String lastName) {\r\n        this.lastName = lastName;\r\n    }\r\n    public String getUri() {\r\n        return uri;\r\n    }\r\n    public void setUri(String uri) {\r\n        this.uri = uri;\r\n    }\r\n}\r\n\r\n```","```java\r\n    package com.howtodoinjava.jerseydemo;\r\n\r\n    import org.glassfish.jersey.server.ResourceConfig;\r\n    import org.springframework.stereotype.Component;\r\n\r\n    @Component\r\n    public class JerseyConfig extends ResourceConfig \r\n    {\r\n    \tpublic JerseyConfig() \r\n    \t{\r\n    \t\tregister(UserResource.class);\r\n    \t}\r\n    }\r\n\r\n    ```","```java\r\n    package com.howtodoinjava.jerseydemo;\r\n\r\n    import org.springframework.boot.autoconfigure.SpringBootApplication;\r\n    import org.springframework.boot.builder.SpringApplicationBuilder;\r\n    import org.springframework.boot.web.support.SpringBootServletInitializer;\r\n\r\n    @SpringBootApplication\r\n    public class JerseydemoApplication extends SpringBootServletInitializer \r\n    {\r\n    \tpublic static void main(String[] args) \r\n    \t{\r\n    \t\tnew JerseydemoApplication().configure(new SpringApplicationBuilder(JerseydemoApplication.class)).run(args);\r\n    \t}\r\n    }\r\n\r\n    ```"]