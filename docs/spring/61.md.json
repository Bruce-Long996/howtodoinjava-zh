["```java\r\n<parent>\r\n\t<groupId>org.springframework.boot</groupId>\r\n\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t<version>2.1.8.RELEASE</version>\r\n</parent>\r\n\r\n<dependencies>\r\n\t<dependency>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter</artifactId>\r\n    </dependency>\r\n\r\n\t<dependency>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-mail</artifactId>\r\n    </dependency>\r\n</dependencies>\r\n\r\n```","```java\r\ndebug=true\r\n\r\nspring.mail.host=smtp.gmail.com\r\nspring.mail.port=25\r\nspring.mail.username=admin@gmail.com\r\nspring.mail.password=xxxxxx\r\n\r\n# Other properties\r\nspring.mail.properties.mail.debug=true\r\nspring.mail.properties.mail.transport.protocol=smtp\r\nspring.mail.properties.mail.smtp.auth=true\r\nspring.mail.properties.mail.smtp.connectiontimeout=5000\r\nspring.mail.properties.mail.smtp.timeout=5000\r\nspring.mail.properties.mail.smtp.writetimeout=5000\r\n\r\n# TLS , port 587\r\nspring.mail.properties.mail.smtp.starttls.enable=true\r\n\r\n# SSL, post 465\r\n#spring.mail.properties.mail.smtp.socketFactory.port = 465\r\n#spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory\r\n\r\n```","```java\r\nspring.mail.host=smtp-mail.outlook.com\r\nspring.mail.port=587\r\nspring.mail.username=outlookuserid@outlook.com\r\nspring.mail.password=xxxxxx\r\n\r\nspring.mail.properties.mail.protocol=smtp\r\nspring.mail.properties.mail.tls=true\r\n\r\nspring.mail.properties.mail.smtp.auth=true\r\nspring.mail.properties.mail.smtp.starttls.enable=true\r\nspring.mail.properties.mail.smtp.ssl.trust=smtp-mail.outlook.com\r\n\r\n```","```java\r\nspring.mail.host=email-smtp.us-east-1.amazonaws.com\r\nspring.mail.port=465\r\nspring.mail.username=xxxxxxxxxxx\r\nspring.mail.password=xxxxxxxxxxx\r\n\r\nspring.mail.properties.mail.smtp.starttls.enable=true\r\nspring.mail.properties.mail.smtp.starttls.required=true\r\nspring.mail.properties.mail.smtp.ssl.enavle=true\r\n\r\nspring.mail.properties.mail.protocol=smtps\r\n\r\nspring.mail.properties.mail.smtps.auth=true\r\n\r\n```","```java\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.mail.SimpleMailMessage;\r\n\r\n@Configuration\r\npublic class EmailConfig \r\n{\r\n\t@Bean\r\n\tpublic SimpleMailMessage emailTemplate()\r\n\t{\r\n\t\tSimpleMailMessage message = new SimpleMailMessage();\r\n\t\tmessage.setTo(\"user@gmail.com\");\r\n\t\tmessage.setFrom(\"admin@gmail.com\");\r\n\t\tmessage.setSubject(\"Important email\");\r\n\t    message.setText(\"FATAL - Application crash. Save your job !!\");\r\n\t    return message;\r\n\t}\r\n}\r\n\r\n```","```java\r\n@Service(\"emailService\")\r\npublic class EmailService \r\n{\r\n    @Autowired\r\n    private JavaMailSender mailSender;\r\n\r\n    @Autowired\r\n    private SimpleMailMessage preConfiguredMessage;\r\n\r\n    /**\r\n     * This method will send compose and send the message \r\n     * */\r\n    public void sendMail(String to, String subject, String body) \r\n    {\r\n        SimpleMailMessage message = new SimpleMailMessage();\r\n        message.setTo(to);\r\n        message.setSubject(subject);\r\n        message.setText(body);\r\n        mailSender.send(message);\r\n    }\r\n\r\n    /**\r\n     * This method will send a pre-configured message\r\n     * */\r\n    public void sendPreConfiguredMail(String message) \r\n    {\r\n        SimpleMailMessage mailMessage = new SimpleMailMessage(preConfiguredMessage);\r\n        mailMessage.setText(message);\r\n        mailSender.send(mailMessage);\r\n    }\r\n}\r\n\r\n```","```java\r\n@Autowired\r\nprivate JavaMailSender mailSender;\r\n\r\npublic void sendMailWithAttachment(String to, String subject, String body, String fileToAttach) \r\n{\r\n\tMimeMessagePreparator preparator = new MimeMessagePreparator() \r\n\t{\r\n        public void prepare(MimeMessage mimeMessage) throws Exception \r\n        {\r\n            mimeMessage.setRecipient(Message.RecipientType.TO, new InternetAddress(to));\r\n            mimeMessage.setFrom(new InternetAddress(\"admin@gmail.com\"));\r\n            mimeMessage.setSubject(subject);\r\n            mimeMessage.setText(body);\r\n\r\n            FileSystemResource file = new FileSystemResource(new File(fileToAttach));\r\n            MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, true);\r\n            helper.addAttachment(\"logo.jpg\", file);\r\n        }\r\n    };\r\n\r\n    try {\r\n        mailSender.send(preparator);\r\n    }\r\n    catch (MailException ex) {\r\n        // simply log it and go on...\r\n        System.err.println(ex.getMessage());\r\n    }\r\n}\r\n\r\n```","```java\r\n@Autowired\r\nprivate JavaMailSender mailSender;\r\n\r\npublic void sendMailWithInlineResources(String to, String subject, String fileToAttach) \r\n{\r\n\tMimeMessagePreparator preparator = new MimeMessagePreparator() \r\n\t{\r\n        public void prepare(MimeMessage mimeMessage) throws Exception \r\n        {\r\n            mimeMessage.setRecipient(Message.RecipientType.TO, new InternetAddress(to));\r\n            mimeMessage.setFrom(new InternetAddress(\"admin@gmail.com\"));\r\n            mimeMessage.setSubject(subject);\r\n\r\n            MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, true);\r\n\r\n            helper.setText(\"<html><body><img src='cid:identifier1234'></body></html>\", true);\r\n\r\n            FileSystemResource res = new FileSystemResource(new File(fileToAttach));\r\n            helper.addInline(\"identifier1234\", res);\r\n        }\r\n    };\r\n\r\n    try {\r\n        mailSender.send(preparator);\r\n    }\r\n    catch (MailException ex) {\r\n        // simply log it and go on...\r\n        System.err.println(ex.getMessage());\r\n    }\r\n}\r\n\r\n```","```java\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.boot.CommandLineRunner;\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\n\r\n@SpringBootApplication\r\npublic class Application implements CommandLineRunner \r\n{\r\n\t@Autowired\r\n    private EmailService emailService;\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(Application.class, args);\r\n    }\r\n\r\n    @Override\r\n    public void run(String... args) \r\n    {\r\n    \temailService.sendMail(\"lokeshgupta1981@gmail.com\", \"Hi\", \"Ho ho ho\");\r\n\r\n    \temailService.sendPreConfiguredMail(\"Ho ho ho\");\r\n\t}\r\n}\r\n\r\n```"]