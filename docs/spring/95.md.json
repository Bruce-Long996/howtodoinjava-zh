["```java\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd;\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\r\n\t<groupId>com.howtodoinjava</groupId>\r\n\t<artifactId>App</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<packaging>jar</packaging>\r\n\r\n\t<name>App</name>\r\n\t<url>http://maven.apache.org</url>\r\n\r\n\t<parent>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t\t<version>2.0.3.RELEASE</version>\r\n\t</parent>\r\n\r\n\t<properties>\r\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n\t</properties>\r\n\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-batch</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.h2database</groupId>\r\n\t\t\t<artifactId>h2</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\r\n\t<repositories>\r\n\t\t<repository>\r\n\t\t\t<id>repository.spring.release</id>\r\n\t\t\t<name>Spring GA Repository</name>\r\n\t\t\t<url>http://repo.spring.io/release</url>\r\n\t\t</repository>\r\n\t</repositories>\r\n</project>\r\n\r\n```","```java\r\npackage com.howtodoinjava.demo.config;\r\n\r\nimport javax.sql.DataSource;\r\nimport org.springframework.batch.core.Job;\r\nimport org.springframework.batch.core.Step;\r\nimport org.springframework.batch.core.configuration.annotation.EnableBatchProcessing;\r\nimport org.springframework.batch.core.configuration.annotation.JobBuilderFactory;\r\nimport org.springframework.batch.core.configuration.annotation.StepBuilderFactory;\r\nimport org.springframework.batch.core.launch.support.RunIdIncrementer;\r\nimport org.springframework.batch.item.ItemProcessor;\r\nimport org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider;\r\nimport org.springframework.batch.item.database.JdbcBatchItemWriter;\r\nimport org.springframework.batch.item.file.FlatFileItemReader;\r\nimport org.springframework.batch.item.file.LineMapper;\r\nimport org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper;\r\nimport org.springframework.batch.item.file.mapping.DefaultLineMapper;\r\nimport org.springframework.batch.item.file.transform.DelimitedLineTokenizer;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.beans.factory.annotation.Value;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.core.io.Resource;\r\nimport org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder;\r\nimport org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType;\r\nimport com.howtodoinjava.demo.model.Employee;\r\n\r\n@Configuration\r\n@EnableBatchProcessing\r\npublic class BatchConfig {\r\n\r\n\t@Autowired\r\n\tprivate JobBuilderFactory jobBuilderFactory;\r\n\r\n\t@Autowired\r\n\tprivate StepBuilderFactory stepBuilderFactory;\r\n\r\n\t@Value(\"classPath:/input/inputData.csv\")\r\n\tprivate Resource inputResource;\r\n\r\n\t@Bean\r\n\tpublic Job readCSVFileJob() {\r\n\t\treturn jobBuilderFactory\r\n\t\t\t\t.get(\"readCSVFileJob\")\r\n\t\t\t\t.incrementer(new RunIdIncrementer())\r\n\t\t\t\t.start(step())\r\n\t\t\t\t.build();\r\n\t}\r\n\r\n\t@Bean\r\n\tpublic Step step() {\r\n\t\treturn stepBuilderFactory\r\n\t\t\t\t.get(\"step\")\r\n\t\t\t\t.<Employee, Employee>chunk(5)\r\n\t\t\t\t.reader(reader())\r\n\t\t\t\t.processor(processor())\r\n\t\t\t\t.writer(writer())\r\n\t\t\t\t.build();\r\n\t}\r\n\r\n\t@Bean\r\n    public ItemProcessor<Employee, Employee> processor() {\r\n        return new DBLogProcessor();\r\n    }\r\n\r\n\t@Bean\r\n\tpublic FlatFileItemReader<Employee> reader() {\r\n\t\tFlatFileItemReader<Employee> itemReader = new FlatFileItemReader<Employee>();\r\n\t\titemReader.setLineMapper(lineMapper());\r\n\t\titemReader.setLinesToSkip(1);\r\n\t\titemReader.setResource(inputResource);\r\n\t\treturn itemReader;\r\n\t}\r\n\r\n\t@Bean\r\n\tpublic LineMapper<Employee> lineMapper() {\r\n\t\tDefaultLineMapper<Employee> lineMapper = new DefaultLineMapper<Employee>();\r\n\t\tDelimitedLineTokenizer lineTokenizer = new DelimitedLineTokenizer();\r\n\t\tlineTokenizer.setNames(new String[] { \"id\", \"firstName\", \"lastName\" });\r\n\t\tlineTokenizer.setIncludedFields(new int[] { 0, 1, 2 });\r\n\t\tBeanWrapperFieldSetMapper<Employee> fieldSetMapper = new BeanWrapperFieldSetMapper<Employee>();\r\n\t\tfieldSetMapper.setTargetType(Employee.class);\r\n\t\tlineMapper.setLineTokenizer(lineTokenizer);\r\n\t\tlineMapper.setFieldSetMapper(fieldSetMapper);\r\n\t\treturn lineMapper;\r\n\t}\r\n\r\n\t@Bean\r\n\tpublic JdbcBatchItemWriter<Employee> writer() {\r\n\t\tJdbcBatchItemWriter<Employee> itemWriter = new JdbcBatchItemWriter<Employee>();\r\n\t\titemWriter.setDataSource(dataSource());\r\n\t\titemWriter.setSql(\"INSERT INTO EMPLOYEE (ID, FIRSTNAME, LASTNAME) VALUES (:id, :firstName, :lastName)\");\r\n\t\titemWriter.setItemSqlParameterSourceProvider(new BeanPropertyItemSqlParameterSourceProvider<Employee>());\r\n\t\treturn itemWriter;\r\n\t}\r\n\r\n\t@Bean\r\n\tpublic DataSource dataSource(){\r\n\t\tEmbeddedDatabaseBuilder embeddedDatabaseBuilder = new EmbeddedDatabaseBuilder();\r\n\t\treturn embeddedDatabaseBuilder.addScript(\"classpath:org/springframework/batch/core/schema-drop-h2.sql\")\r\n\t\t\t\t.addScript(\"classpath:org/springframework/batch/core/schema-h2.sql\")\r\n\t\t\t\t.addScript(\"classpath:employee.sql\")\r\n\t\t\t\t.setType(EmbeddedDatabaseType.H2)\r\n\t\t\t\t.build();\r\n\t}\r\n}\r\n\r\n```","```java\r\npackage com.howtodoinjava.demo.config;\r\n\r\nimport org.springframework.batch.item.ItemProcessor;\r\nimport com.howtodoinjava.demo.model.Employee;\r\n\r\npublic class DBLogProcessor implements ItemProcessor<Employee, Employee>\r\n{\r\n\tpublic Employee process(Employee employee) throws Exception\r\n\t{\r\n\t\tSystem.out.println(\"Inserting employee : \" + employee);\r\n\t\treturn employee;\r\n\t}\r\n}\r\n\r\n```","```java\r\npackage com.howtodoinjava.demo.config;\r\npackage com.howtodoinjava.demo.model;\r\n\r\npublic class Employee {\r\n\r\n\tString id;\r\n\tString firstName;\r\n\tString lastName;\r\n\r\n\t//Setter and getter methods\r\n}\r\n\r\n```","```java\r\n#Disable batch job's auto start \r\nspring.batch.job.enabled=false\r\nspring.main.banner-mode=off\r\n\r\n#batch input files location\r\ninput.dir=c:/temp/input\r\n\r\n```","```java\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<configuration scan=\"true\">\r\n\r\n\t<appender name=\"consoleAppender\" class=\"ch.qos.logback.core.ConsoleAppender\">\r\n\t\t<encoder>\r\n\t\t\t<charset>UTF-8</charset>\r\n\t\t\t<Pattern>%d{yyyy-MM-dd HH:mm:ss} %p %X{TXNID} - %m%n</Pattern>\r\n\t\t</encoder>\r\n\t</appender>\r\n\r\n\t<root level=\"INFO\">\r\n\t\t<appender-ref ref=\"consoleAppender\" />\r\n\t</root>\r\n</configuration>\r\n\r\n```","```java\r\n@Bean\r\npublic DataSource dataSource(){\r\n\tEmbeddedDatabaseBuilder embeddedDatabaseBuilder = new EmbeddedDatabaseBuilder();\r\n\treturn embeddedDatabaseBuilder.addScript(\"classpath:org/springframework/batch/core/schema-drop-h2.sql\")\r\n\t\t\t.addScript(\"classpath:org/springframework/batch/core/schema-h2.sql\")\r\n\t\t\t.addScript(\"classpath:employee.sql\")\r\n\t\t\t.setType(EmbeddedDatabaseType.H2)\r\n\t\t\t.build();\r\n}\r\n\r\n```","```java\r\nDROP TABLE EMPLOYEE IF EXISTS;\r\n\r\nCREATE TABLE EMPLOYEE  (\r\n\tID VARCHAR(10),  \r\n\tFIRSTNAME VARCHAR(100),  \r\n\tLASTNAME VARCHAR(100) \r\n) ;\r\n\r\n```","```java\r\npackage com.howtodoinjava.demo.config;\r\n\r\nimport org.h2.server.web.WebServlet;\r\nimport org.springframework.boot.web.servlet.ServletRegistrationBean;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\n\r\n@SuppressWarnings({\"rawtypes\",\"unchecked\"})\r\n@Configuration\r\npublic class WebConfig {\r\n\r\n\t@Bean\r\n    ServletRegistrationBean h2servletRegistration(){\r\n\t\tServletRegistrationBean registrationBean = new ServletRegistrationBean( new WebServlet());\r\n        registrationBean.addUrlMappings(\"/console/*\");\r\n        return registrationBean;\r\n    }\r\n}\r\n\r\n```","```java\r\nid,firstName,lastName\r\n1,Lokesh,Gupta\r\n2,Amit,Mishra\r\n3,Pankaj,Kumar\r\n4,David,Miller\r\n5,David,Walsh\r\n\r\n```","```java\r\npackage com.howtodoinjava.demo;\r\n\r\nimport org.springframework.batch.core.Job;\r\nimport org.springframework.batch.core.JobParameters;\r\nimport org.springframework.batch.core.JobParametersBuilder;\r\nimport org.springframework.batch.core.launch.JobLauncher;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.scheduling.annotation.EnableScheduling;\r\nimport org.springframework.scheduling.annotation.Scheduled;\r\n\r\n@SpringBootApplication\r\n@EnableScheduling\r\npublic class App\r\n{\r\n    @Autowired\r\n    JobLauncher jobLauncher;\r\n\r\n    @Autowired\r\n    Job job;\r\n\r\n    public static void main(String[] args)\r\n    {\r\n        SpringApplication.run(App.class, args);\r\n    }\r\n\r\n    @Scheduled(cron = \"0 */1 * * * ?\")\r\n    public void perform() throws Exception\r\n    {\r\n        JobParameters params = new JobParametersBuilder()\r\n                .addString(\"JobID\", String.valueOf(System.currentTimeMillis()))\r\n                .toJobParameters();\r\n        jobLauncher.run(job, params);\r\n    }\r\n}\r\n\r\n```","```java\r\n2018-07-11 19:11:00 INFO  - Job: [SimpleJob: [name=readCSVFileJob]] launched with the following parameters: [{JobID=1531316460004}]\r\n\r\n2018-07-11 19:11:00 INFO  - Executing step: [step]\r\n\r\nInserting employee : Employee [id=1, firstName=Lokesh, lastName=Gupta]\r\nInserting employee : Employee [id=2, firstName=Amit, lastName=Mishra]\r\nInserting employee : Employee [id=3, firstName=Pankaj, lastName=Kumar]\r\nInserting employee : Employee [id=4, firstName=David, lastName=Miller]\r\nInserting employee : Employee [id=5, firstName=David, lastName=Walsh]\r\n\r\n2018-07-11 19:11:00 INFO  - Job: [SimpleJob: [name=readCSVFileJob]] completed with the following parameters: [{JobID=1531316460004}] and the following status: [COMPLETED]\r\n\r\n```"]