["```java\r\n<dependency>\r\n\t<groupId>org.springframework.boot</groupId>\r\n\t<artifactId>spring-boot-starter-aop</artifactId>\r\n</dependency>\r\n\r\n```","```java\r\n#spring.aop.auto = false\t//'false' disables the auto configuration\r\n\r\n```","```java\r\nimport org.apache.logging.log4j.LogManager;\r\nimport org.apache.logging.log4j.Logger;\r\nimport org.aspectj.lang.ProceedingJoinPoint;\r\nimport org.aspectj.lang.annotation.Around;\r\nimport org.aspectj.lang.annotation.Aspect;\r\nimport org.aspectj.lang.reflect.MethodSignature;\r\nimport org.springframework.stereotype.Component;\r\nimport org.springframework.util.StopWatch;\r\n\r\n@Aspect\r\n@Component\r\npublic class LoggingAspect \r\n{\r\n\tprivate static final Logger LOGGER = LogManager.getLogger(LoggingAspect.class);\r\n\r\n\t@Around(\"execution(* com.howtodoinjava.aop..*(..)))\")\r\n    public Object profileAllMethods(ProceedingJoinPoint proceedingJoinPoint) throws Throwable \r\n    {\r\n        MethodSignature methodSignature = (MethodSignature) proceedingJoinPoint.getSignature();\r\n\r\n        //Get intercepted method details\r\n        String className = methodSignature.getDeclaringType().getSimpleName();\r\n        String methodName = methodSignature.getName();\r\n\r\n        final StopWatch stopWatch = new StopWatch();\r\n\r\n        //Measure method execution time\r\n        stopWatch.start();\r\n        Object result = proceedingJoinPoint.proceed();\r\n        stopWatch.stop();\r\n\r\n        //Log method execution time\r\n        LOGGER.info(\"Execution time of \" + className + \".\" + methodName + \" \"\r\n        \t\t\t\t\t+ \":: \" + stopWatch.getTotalTimeMillis() + \" ms\");\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\n```","```java\r\n@Service\r\npublic class DomainService \r\n{\r\n\tpublic Object getDomainObjectById(Long id)\r\n\t{\r\n\t\ttry {\r\n\t\t\tThread.sleep(new Random().nextInt(2000));\r\n\t\t} catch (InterruptedException e) {\r\n\t\t\t//do some logging\r\n\t\t}\r\n        return id;\r\n    }\r\n}\r\n\r\n```","```java\r\nimport org.junit.Test;\r\nimport org.junit.runner.RunWith;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.boot.test.context.SpringBootTest;\r\nimport org.springframework.test.context.junit4.SpringRunner;\r\n\r\n@RunWith(SpringRunner.class)\r\n@SpringBootTest\r\npublic class AopSpringBootTest \r\n{\r\n\t@Autowired\r\n\tprivate DomainService service;\r\n\r\n\t@Test\r\n\tpublic void testGetDomainObjectById() \r\n\t{\r\n\t\tservice.getDomainObjectById(10L);\r\n\t}\r\n}\r\n\r\n```","```java\r\n2019-11-07T21:02:58.390+0530 INFO Execution time of DomainService.getDomainObjectById :: 1145 ms\r\n\r\n```"]